{"version":3,"sources":["form/Form3.jsx","form/Form4.jsx","form/Form.jsx","agrement.jsx","complete.jsx","app bar/AppBar.jsx","upload.jsx","pay.js","redux/type.js","auth/login.jsx","redux/actions/student.js","component/loading.jsx","App.js","serviceWorker.js","redux/reduser/admin.js","redux/store.js","index.js","config/config.js","banner.jpg"],"names":["useStyles","makeStyles","theme","root","padding","backgroundColor","breakpoints","down","paper","marginBottom","width","textField","margin","spacing","heading","marginTop","divider","selectLang","noLang","FormMain3","props","sty","blood","useHistory","Religion","Yup","ref","msg","test","name","exclusive","message","params","reference","path","value","this","resolve","schema","shape","fatherName","required","fatherKaj","motherName","motherKaj","guardianName","guardianRelation","guardianNo","length","x","MIncome","gender","maritalStatus","religion","nationality","initialValues","pwd","AddressP","PSP","pinP","cityP","stateP","countryP","AddressX","PSPX","pinPX","cityPX","statePX","countryPX","onSubmit","values","setSubmitting","PA","address","policeStation","pin","city","state","country","presentAddress","permanentAddress","data","permanentAddressSame","father","occupation","mother","guardian","mobile","relation","familyIncome","console","log","fetch","url","id","method","credentials","headers","body","JSON","stringify","then","res","json","d","success","localStorage","setItem","error","alert","catch","r","validationSchema","touched","errors","Typography","variant","select","className","as","TextField","label","helperText","MenuItem","map","p","key","Divider","type","InputProps","startAdornment","InputAdornment","position","fullWidth","style","display","alignItems","Fab","color","propType","PropType","array","isRequired","string","Form4","history","React","useState","sigData","picData","setState","handleChange","e","target","files","file","size","reader","FileReader","onloadend","pic","result","sig","readAsDataURL","flexDirection","paddingLeft","src","alt","height","border","inputProps","accept","onChange","onClick","resp","removeItem","push","paddingRight","marginLeft","marginRight","backgroundImage","require","backgroundPositionX","backgroundPositionY","background","backgroundRepeat","backgroundSize","FormMain","location","next","setNext","setId","useEffect","agree","window","auth","getItem","b_tech","m_tech","applicantName","applicantName2","applicantName3","studentMobileNo","matches","dob","medium","caste","email","rollNo12th","max","registrationNo12th","board12th","passYear12th","Date","getFullYear","schName12th","rollNo10th","registrationNo10th","board10th","passYear10th","schName10th","percent10th","positive","IdNo","idType","marksPassLastExam","yearPassLastExam","boardLastExam","nameLastExam","rollNoEE","rankEE","entranceType","passYearEE","xd","Grid","container","justify","item","Paper","elevation","castes","applicantType","courseType","stream","lateral","firstName","middleName","lastName","category","idNo","course","XII","roll","registration","board","year","school","X","marks","entranceExam","rank","lastExam","axios","post","handleBlur","onBlur","Checkbox","placeholder","InputLabelProps","shrink","defaultValue","classes","inputBase","useStyle","Test","setAgree","textAlign","align","gutterBottom","rel","href","cellSpacing","cellPadding","colSpan","Button","toast","warn","FileDownload","rootMain","minHeight","minWidth","banner","Dashboard","List","ListItem","response","blob","err","button","ListItemText","primary","disabled","flexGrow","menuButton","grow","title","fontSize","Appbar","AppBar","Toolbar","Link","to","underline","component","RouterLink","noWrap","out","CircularProgress","bool","inputx","input","Upload","detail","lineHeight","c","justifyContent","Pay","preventDefault","AUTH","Login","handelChange","Card","CardContent","login","maxWidth","prototype","object","func","mapToProp","dispatch","payload","connect","admin","Loading","App","checkUser","user","logout","exact","Agreement","render","Form","applicantId","bottom","left","fontFamily","Tooltip","arrow","Boolean","hostname","match","initialState","activate","middleware","thunk","reducers","combineReducers","actions","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","document","getElementById","navigator","serviceWorker","ready","unregister","exports","module"],"mappings":"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","file":"static/js/main.3ea713ac.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { TextField, MenuItem, Typography, Divider, Fab, InputAdornment, } from '@material-ui/core';\r\nimport { Form, Field, Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useHistory } from 'react-router-dom';\r\nimport PropType from 'prop-types'\r\nimport Axios from 'axios';\r\nimport { url } from '../config/config';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        padding: 50,\r\n        // lineHeight:1\r\n        backgroundColor: '#eee',\r\n        [theme.breakpoints.down('sm')]: {\r\n            // width: 'inherit',\r\n            padding: 3\r\n            // overflowX:'auto'\r\n        }\r\n    },\r\n    paper: {\r\n        padding: 15,\r\n        marginBottom: 12,\r\n        [theme.breakpoints.down('sm')]: {\r\n            width: 'inherit',\r\n            padding: 0\r\n            // overflowX:'auto'\r\n        }\r\n\r\n    },\r\n    textField: {\r\n        margin: theme.spacing(1),\r\n        // marginRight: theme.spacing(1),\r\n        width: '25ch',\r\n    },\r\n    heading: {\r\n        marginTop: 50,\r\n        marginBottom: 50\r\n    },\r\n    divider: {\r\n        margin: '12px 0'\r\n    },\r\n    selectLang: {\r\n        margin: theme.spacing(1),\r\n        width: '20ch',\r\n    },\r\n    noLang: {\r\n        margin: theme.spacing(1),\r\n        width: '20ch',\r\n    }\r\n}));\r\n\r\n\r\n\r\nfunction FormMain3(props) {\r\n    const sty = useStyles();\r\n    const history = useHistory()\r\n\r\n    const blood = [\r\n        'A-', 'A+', 'B-', 'B+', 'AB-', 'AB+', 'O-', 'O+', 'Unknown'\r\n    ]\r\n    const Religion = [\r\n        'Hinduism',\r\n        'Islam',\r\n        'Christianity',\r\n        'Sikhism',\r\n        'Buddhism',\r\n        'Jainism',\r\n        'Unaffiliated',\r\n        'Others',\r\n    ]\r\n    function isSubject(ref, msg) {\r\n        return Yup.mixed().test({\r\n            name: 'isSubject',\r\n            exclusive: false,\r\n            message: msg || 'require b',\r\n            params: {\r\n                reference: ref.path,\r\n            },\r\n            test: function (value) {\r\n                return this.resolve(ref) ? value ? true : false : true\r\n            },\r\n        });\r\n    }\r\n    Yup.addMethod(Yup.number, 'isSubject', isSubject);\r\n    const schema = Yup.object().shape({\r\n        fatherName: Yup.string().required('Required'),\r\n        fatherKaj: Yup.string().required('Required'),\r\n        motherName: Yup.string().required('Required'),\r\n        motherKaj: Yup.string().required('Required'),\r\n        guardianName: Yup.string().required('Required'),\r\n        guardianRelation: Yup.string().required('Required'),\r\n        guardianNo: Yup.string().length(10, 'Invalid').required('Required'),\r\n        x: Yup.boolean(),\r\n        MIncome: Yup.number().required('Required'),\r\n        gender: Yup.string().required('Required'),\r\n        maritalStatus: Yup.string().required('Required'),\r\n        blood: Yup.string().required('Required'),\r\n        religion: Yup.string().required('Required'),\r\n        nationality: Yup.string().required('Required'),\r\n    })\r\n\r\n    return (\r\n\r\n        <Formik\r\n            initialValues={{\r\n                gender: 'Male',\r\n                maritalStatus: 'Single',\r\n                blood: '',\r\n                religion: '',\r\n                nationality: \"Indian\",\r\n                pwd: 'No',\r\n                x: true,\r\n                fatherName: \"\",\r\n                fatherKaj: \"\",\r\n                motherName: \"\",\r\n                motherKaj: \"\",\r\n                guardianName: \"\",\r\n                guardianRelation: \"\",\r\n                guardianNo: \"\",\r\n                MIncome: \"\",\r\n                AddressP: \"\",\r\n                PSP: \"\",\r\n                pinP: \"\",\r\n                cityP: \"\",\r\n                stateP: '',\r\n                countryP: 'India',\r\n                AddressX: \"\",\r\n                PSPX: \"\",\r\n                pinPX: \"\",\r\n                cityPX: \"\",\r\n                statePX: '',\r\n                countryPX: '',\r\n\r\n\r\n\r\n            }}\r\n\r\n            onSubmit={(values, { setSubmitting }) => {\r\n                setSubmitting(true);\r\n                const PA = {\r\n                    address: values.AddressX,\r\n                    policeStation: values.PSPX,\r\n                    pin: values.pinPX,\r\n                    city: values.cityPX,\r\n                    state: values.statePX,\r\n                    country: values.countryPX,\r\n                }\r\n                const presentAddress = {\r\n                    address: values.AddressP,\r\n                    policeStation: values.PSP,\r\n                    pin: values.pinP,\r\n                    city: values.cityP,\r\n                    state: values.stateP,\r\n                    country: values.countryP,\r\n                }\r\n                const permanentAddress = values.x ? presentAddress : PA\r\n\r\n                const data = {\r\n                    gender: values.gender,\r\n                    maritalStatus: values.maritalStatus,\r\n                    blood: values.blood,\r\n                    religion: values.religion,\r\n                    nationality: values.nationality,\r\n                    pwd: values.pwd,\r\n                    permanentAddressSame: values.x,\r\n\r\n                    father: {\r\n                        name: values.fatherName,\r\n                        occupation: values.fatherKaj,\r\n                    },\r\n                    mother: {\r\n                        name: values.motherName,\r\n                        occupation: values.motherKaj,\r\n                    },\r\n                    guardian: {\r\n                        name: values.guardianName,\r\n                        mobile: values.guardianNo,\r\n                        relation: values.guardianRelation,\r\n                    },\r\n                    familyIncome: values.MIncome,\r\n                    presentAddress,\r\n                    permanentAddress\r\n                }\r\n\r\n                console.log(data);\r\n                fetch(`${url}/api/student/${props.id}/family`, {\r\n                    method: 'POST',\r\n                    credentials: 'include',\r\n                    headers: { 'Content-type': 'Application/json' },\r\n                    body: JSON.stringify(data)\r\n                }).then(res => {\r\n                    res.json().then(d => {\r\n                        console.log(d);\r\n                        if (d.success === true) {\r\n                            setSubmitting(false);\r\n                            localStorage.setItem('step', 3)\r\n                            props.success(3);\r\n\r\n                        }\r\n                        if (d.error === true) {\r\n                            setSubmitting(false);\r\n                            alert(d.message)\r\n                        }\r\n                    })\r\n                }).catch(r => console.log(r))\r\n\r\n            }}\r\n\r\n            validationSchema={schema}\r\n        >\r\n            {(props) => {\r\n                const {\r\n                    values,\r\n                    touched,\r\n                    errors,\r\n                } = props;\r\n                return (\r\n\r\n                    <Form>\r\n                        <Typography variant='h6'>Personal Details</Typography>\r\n                        <div>\r\n                            <Field\r\n                                name=\"gender\"\r\n                                required\r\n                                select\r\n                                className={sty.textField}\r\n                                as={TextField}\r\n                                label=\"Select Gender\"\r\n                                error={errors.gender && touched.gender}\r\n                                helperText={(errors.gender && touched.gender) && errors.gender}\r\n                            >\r\n                                <MenuItem value='Male'>\r\n                                    Male\r\n                                </MenuItem>\r\n                                <MenuItem value='Female'>\r\n                                    Female\r\n                                </MenuItem>\r\n                                <MenuItem value='TG'>\r\n                                    TG\r\n                                </MenuItem>\r\n                            </Field>\r\n                            <Field\r\n                                name=\"maritalStatus\"\r\n                                select\r\n                                className={sty.textField}\r\n                                error={errors.maritalStatus && touched.maritalStatus}\r\n                                helperText={(errors.maritalStatus && touched.maritalStatus) && errors.maritalStatus}\r\n                                as={TextField}\r\n                                label=\"Select Marital Status\"\r\n                            >\r\n                                <MenuItem value='Single'>\r\n                                    Single\r\n                            </MenuItem>\r\n                                <MenuItem value='Married'>\r\n                                    Married\r\n                            </MenuItem>\r\n\r\n\r\n                            </Field>\r\n                            <Field\r\n                                name=\"blood\"\r\n                                select\r\n                                className={sty.textField}\r\n                                error={errors.blood && touched.blood}\r\n                                helperText={(errors.blood && touched.blood) && errors.blood}\r\n                                as={TextField}\r\n                                label=\"Select Blood Group\"\r\n                            >\r\n                                {blood.map(p => {\r\n                                    return (<MenuItem key={p} value={p}>\r\n                                        {p}\r\n                                    </MenuItem>)\r\n                                })}\r\n                            </Field>\r\n                            <Field\r\n                                name=\"religion\"\r\n                                select\r\n                                className={sty.textField}\r\n                                error={errors.religion && touched.religion}\r\n                                helperText={(errors.religion && touched.religion) && errors.religion}\r\n                                as={TextField}\r\n                                label=\"Select Religion\"\r\n                            >\r\n                                {Religion.map(p => {\r\n                                    return (<MenuItem key={p} value={p}>\r\n                                        {p}\r\n                                    </MenuItem>)\r\n                                })}\r\n                            </Field>\r\n                            <Field\r\n                                name=\"nationality\"\r\n                                className={sty.textField}\r\n                                error={errors.nationality && touched.nationality}\r\n                                helperText={(errors.nationality && touched.nationality) && errors.nationality}\r\n                                as={TextField}\r\n                                label=\"Nationality\"\r\n                            />\r\n                            <Field\r\n                                name=\"pwd\"\r\n                                className={sty.textField}\r\n                                required\r\n\r\n                                select\r\n                                as={TextField}\r\n                                label=\"Physically Challenged? (Handicapped)\"\r\n                            >\r\n                                <MenuItem value='No'>No</MenuItem>\r\n                                <MenuItem value='Yes'>Yes</MenuItem>\r\n                            </Field>\r\n\r\n                        </div>\r\n                        <Divider className={sty.divider} />\r\n                        <Typography variant='subtitle1'>Guardian Details</Typography>\r\n                        <div>\r\n                            <Field\r\n                                name=\"fatherName\"\r\n                                label=\"Applicant Father Name\"\r\n                                className={sty.textField}\r\n                                // placeholder=\"First Name\"\r\n                                error={errors.fatherName && touched.fatherName}\r\n                                helperText={(errors.fatherName && touched.fatherName) && errors.fatherName}\r\n                                as={TextField}\r\n\r\n                            />\r\n                            <Field\r\n                                name=\"fatherKaj\"\r\n                                label=\"Applicant Father Occupation\"\r\n                                className={sty.textField}\r\n                                // placeholder=\"First Name\"\r\n                                error={errors.fatherKaj && touched.fatherKaj}\r\n                                helperText={(errors.fatherKaj && touched.fatherKaj) && errors.fatherName}\r\n                                as={TextField}\r\n\r\n                            />\r\n                            <Field\r\n                                name=\"motherName\"\r\n                                label=\"Applicant Mother Name\"\r\n                                className={sty.textField}\r\n                                // placeholder=\"First Name\"\r\n                                error={errors.motherName && touched.motherName}\r\n                                helperText={(errors.motherName && touched.motherName) && errors.motherName}\r\n                                as={TextField}\r\n\r\n                            />\r\n                            <Field\r\n                                name=\"motherKaj\"\r\n                                label=\"Applicant Mother Occupation\"\r\n                                className={sty.textField}\r\n                                // placeholder=\"First Name\"\r\n                                error={errors.motherKaj && touched.motherKaj}\r\n                                helperText={(errors.motherKaj && touched.motherKaj) && errors.motherKaj}\r\n                                as={TextField}\r\n\r\n                            />\r\n                            <Field\r\n                                name=\"guardianName\"\r\n                                label=\"Applicant Guardian's Name\"\r\n                                className={sty.textField}\r\n                                error={errors.guardianName && touched.guardianName}\r\n                                helperText={(errors.guardianName && touched.guardianName) && errors.guardianName}\r\n                                as={TextField}\r\n                            />\r\n                            <Field\r\n                                name=\"guardianRelation\"\r\n                                label=\"Applicant Guardian's Relation\"\r\n                                className={sty.textField}\r\n                                error={errors.guardianRelation && touched.guardianRelation}\r\n                                helperText={(errors.guardianRelation && touched.guardianRelation) && errors.guardianRelation}\r\n                                as={TextField}\r\n                            />\r\n\r\n                            <Field\r\n                                label=\"Guardian's Mobile No\"\r\n                                name=\"guardianNo\"\r\n                                type='number'\r\n                                InputProps={{\r\n                                    startAdornment: (\r\n                                        <InputAdornment position=\"start\">\r\n                                            +91\r\n                                        </InputAdornment>\r\n                                    )\r\n                                }}\r\n                                className={sty.textField}\r\n                                margin=\"dense\"\r\n                                error={errors.guardianNo && touched.guardianNo}\r\n                                helperText={(errors.guardianNo && touched.guardianNo) && errors.guardianNo}\r\n                                as={TextField}\r\n                            />\r\n                            <Field\r\n                                // InputLabelProps={{\r\n                                //     shrink: true,\r\n                                // }}\r\n                                label=\"Monthly Family Income\"\r\n                                name=\"MIncome\"\r\n                                className={sty.textField}\r\n                                type='number'\r\n                                error={errors.MIncome && touched.MIncome}\r\n                                helperText={(errors.MIncome && touched.MIncome) && errors.MIncome}\r\n                                as={TextField}\r\n                            />\r\n\r\n                        </div>\r\n                        <Divider className={sty.divider} />\r\n                        <div>\r\n                            <Typography variant='h6'>Address & Communication</Typography>\r\n                            <Typography variant='subtitle1'>Present Address</Typography>\r\n                            <Field\r\n                                label=\"Address\"\r\n                                name=\"AddressP\"\r\n                                fullWidth\r\n                                required\r\n                                className={sty.textField}\r\n                                error={errors.AddressP && touched.AddressP}\r\n                                helperText={(errors.AddressP && touched.AddressP) && errors.AddressP}\r\n                                as={TextField}\r\n                            />\r\n                            <Field\r\n                                error={errors.PSP && touched.PSP}\r\n                                helperText={(errors.PSP && touched.PSP) && errors.PSP}\r\n                                as={TextField}\r\n                                name=\"PSP\"\r\n                                required\r\n                                label=\"Police Station\"\r\n                                className={sty.textField}\r\n                            />\r\n                            <Field\r\n                                name=\"pinP\"\r\n                                type='number'\r\n                                required\r\n                                label=\"PIN Code\"\r\n                                className={sty.textField}\r\n                                error={errors.pinP && touched.pinP}\r\n                                helperText={(errors.pinP && touched.pinP) && errors.pinP}\r\n                                as={TextField}\r\n                            />\r\n                            <Field\r\n                                name=\"cityP\"\r\n                                label=\"City / District\"\r\n                                className={sty.textField}\r\n                                error={errors.cityP && touched.cityP}\r\n                                helperText={(errors.cityP && touched.cityP) && errors.cityP}\r\n                                as={TextField}\r\n                                required\r\n                            />\r\n                            <Field\r\n                                required\r\n                                error={errors.stateP && touched.stateP}\r\n                                helperText={(errors.stateP && touched.stateP) && errors.stateP}\r\n                                as={TextField}\r\n                                name=\"stateP\"\r\n                                label=\"State\"\r\n                                className={sty.textField}\r\n                            />\r\n                            <Field\r\n                                required\r\n                                error={errors.countryP && touched.countryP}\r\n                                helperText={(errors.countryP && touched.countryP) && errors.countryP}\r\n                                as={TextField}\r\n                                name=\"countryP\"\r\n                                label=\"Country\"\r\n                                className={sty.textField}\r\n                            />\r\n\r\n                        </div>\r\n                        <Divider className={sty.divider} />\r\n                        <div>\r\n                            <Typography variant='subtitle1'> Permanent Address</Typography>\r\n                            <div style={{ display: 'inline-flex', alignItems: 'center' }}><Field type='checkbox' name='x' /><p> Same as above</p></div><br />\r\n                            {!values.x && <>\r\n                                <Field\r\n                                    label=\"Address\"\r\n                                    name=\"AddressX\"\r\n                                    fullWidth\r\n                                    required\r\n                                    className={sty.textField}\r\n                                    as={TextField}\r\n                                />\r\n                                <Field\r\n                                    as={TextField}\r\n                                    name=\"PSPX\"\r\n                                    required\r\n                                    label=\"Police Station\"\r\n                                    className={sty.textField}\r\n                                />\r\n                                <Field\r\n                                    name=\"pinPX\"\r\n                                    type='number'\r\n                                    required\r\n                                    label=\"PIN Code\"\r\n                                    className={sty.textField}\r\n                                    as={TextField}\r\n                                />\r\n                                <Field\r\n                                    name=\"cityPX\"\r\n                                    required\r\n                                    label=\"City / District\"\r\n                                    className={sty.textField}\r\n                                    as={TextField}\r\n                                />\r\n                                <Field\r\n                                    as={TextField}\r\n                                    required\r\n                                    name=\"statePX\"\r\n                                    label=\"State\"\r\n                                    className={sty.textField}\r\n                                />\r\n                                <Field\r\n                                    as={TextField}\r\n                                    required\r\n                                    name=\"countryPX\"\r\n                                    label=\"Country\"\r\n                                    className={sty.textField}\r\n                                /></>}\r\n                        </div>\r\n                        <br />\r\n                        <Fab style={{ margin: '20px 0' }} color=\"primary\" variant='extended' type='submit' >submit & Next</Fab>\r\n                    </Form>)\r\n            }}\r\n        </Formik >\r\n\r\n    )\r\n}\r\nFormMain3.propType = {\r\n    success: PropType.array.isRequired,\r\n    id: PropType.string.isRequired,\r\n\r\n}\r\nexport default FormMain3","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { TextField, Typography, Fab, } from '@material-ui/core'; \r\nimport { useHistory } from 'react-router-dom';\r\nimport { url } from '../config/config';\r\nimport PropType from 'prop-types'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        padding: 50,\r\n        // lineHeight:1\r\n        backgroundColor: '#eee',\r\n        [theme.breakpoints.down('sm')]: {\r\n            // width: 'inherit',\r\n            padding: 3\r\n            // overflowX:'auto'\r\n        }\r\n    },\r\n    paper: {\r\n        padding: 15,\r\n        marginBottom: 12,\r\n        [theme.breakpoints.down('sm')]: {\r\n            width: 'inherit',\r\n            padding: 0\r\n            // overflowX:'auto'\r\n        }\r\n\r\n    },\r\n    textField: {\r\n        marginBottom: theme.spacing(5),\r\n        margin: theme.spacing(1),\r\n        width: '30ch',\r\n    },\r\n\r\n}));\r\n\r\n\r\n\r\nfunction Form4(props) {\r\n    const sty = useStyles();\r\n    const history = useHistory()\r\n    console.log(props.id);\r\n    const [state, setState] = React.useState({ sigData: '', picData: '' })\r\n    const upload = () => {\r\n        // console.log( { pic: state.pic, sig: state.sig });\r\n        if (state.sigData !== '' && state.picData !== '') {\r\n            // /api/student/<id>/images\r\n            fetch(`${url}/api/student/${props.id}/images`, {\r\n                method: 'POST',\r\n                credentials: 'include',\r\n                headers: { 'Content-type': 'Application/json' },\r\n                body:  JSON.stringify({pic:state.pic,sig:state.sig})\r\n            }).then(res => {\r\n                res.json().then(resp => { \r\n                    console.log(resp);\r\n                    if (resp.success === true) {\r\n                        localStorage.removeItem('step')\r\n                        localStorage.removeItem('id') \r\n                        history.push('/dashboard')\r\n                    }\r\n                    if (resp.error === true) {\r\n                        alert(resp.message)\r\n                    }\r\n                })\r\n            }\r\n            ).catch(r => console.log(r))\r\n        } else {\r\n            alert('please select both image first !!!')\r\n        }\r\n\r\n    }\r\n    const handleChange = (e) => {\r\n        if (e.target.files && e.target.files[0]) {\r\n            let file = e.target.files[0];\r\n            if (file.size / 1000 > 100) { return alert('size must not exceed 100kb') } else {\r\n                let reader = new FileReader();\r\n                if (e.target.name === 'picture') {\r\n                    reader.onloadend = () => {\r\n                        setState({\r\n                            ...state,\r\n                            picData: file,\r\n                            pic: reader.result,\r\n                        })\r\n                    }\r\n                }\r\n                if (e.target.name === 'signature') {\r\n                    reader.onloadend = () => {\r\n                        setState({\r\n                            ...state,\r\n                            sigData: file,\r\n                            sig: reader.result,\r\n                        });\r\n                    };\r\n                }\r\n                reader.readAsDataURL(e.target.files[0]);\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        // <Paper className={sty.paper}>\r\n        <>\r\n            <Typography variant='h5'>Upload Photo & Signature</Typography><br />\r\n            <div style={{ display: 'flex', flexDirection: 'column', paddingLeft: 16 }}>\r\n                <img src={state.pic} alt=\" \" style={{\r\n                    width: '99px',\r\n                    height: '105px',\r\n                    border: 'solid 1px',\r\n                }} />\r\n                <Typography variant='subtitle1'>Upload Photo</Typography>\r\n                <TextField name='picture' inputProps={{ accept: \"image/*\" }} onChange={handleChange} className={sty.textField} helperText='size must not exceed 100kb' type='file' />\r\n                <img src={state.sig} alt=\"signature\" style={{\r\n                    width: '150px',\r\n                    height: '67px',\r\n                    border: 'solid 1px',\r\n                }} />\r\n                <Typography variant='subtitle1'>Upload Signature</Typography>\r\n                <TextField name='signature' inputProps={{ accept: \"image/*\" }} className={sty.textField} type='file' onChange={handleChange} helperText='size must not exceed 100kb' />\r\n            </div>\r\n            <Fab style={{ margin: '20px 0' }} color=\"primary\" variant='extended' onClick={upload} >submit & Download Challan</Fab>\r\n            {/* // </Paper> */}\r\n        </>\r\n\r\n    )\r\n}\r\nForm4.propType = { \r\n    id: PropType.string.isRequired,\r\n}\r\nexport default Form4","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useHistory } from 'react-router-dom'\r\nimport { TextField, Paper, Grid, MenuItem, Typography, Divider, Fab, InputAdornment, Checkbox, } from '@material-ui/core';\r\nimport { Form, Field, Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport axios from 'axios'\r\n\r\nimport Form1 from './Form2'\r\nimport Form2 from './Form3'\r\nimport Form3 from './Form4'\r\nimport { url } from '../config/config';\r\nimport { useEffect } from 'react';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    id: {\r\n        height: 12\r\n    },\r\n    root: {\r\n        [theme.breakpoints.down('sm')]: {\r\n            paddingLeft: 3,\r\n            paddingRight: 3,\r\n\r\n        },\r\n        padding: 50,\r\n        backgroundColor: '#eee'\r\n        // lineHeight:1\r\n\r\n    },\r\n    paper: {\r\n        // margin: 30,\r\n        width: '100%',\r\n        padding: 15,\r\n        [theme.breakpoints.down('sm')]: {\r\n            width: 'inherit'\r\n            // overflowX:'auto'\r\n        }\r\n\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: '25ch',\r\n    },\r\n    heading: { \r\n        flexDirection:'column',\r\n        color:'#fff',\r\n        backgroundImage: \"url(\" + require('../banner.jpg') + \")\",\r\n        width: '100%',\r\n        height: '267px',\r\n        backgroundPositionX: 'right',\r\n        backgroundPositionY: 'bottom',\r\n\r\n        background: 'center',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundSize: 'cover',\r\n        [theme.breakpoints.down('xs')]: {\r\n            height: '155px',\r\n\r\n        }\r\n    },\r\n    divider: {\r\n        margin: '12px 0'\r\n    },\r\n    selectLang: {\r\n        margin: theme.spacing(1),\r\n        width: '20ch',\r\n    },\r\n    noLang: {\r\n        margin: theme.spacing(1),\r\n        width: '20ch',\r\n    }\r\n}));\r\n\r\n\r\n\r\nfunction FormMain(props) {\r\n    const history = useHistory()\r\n    const sty = useStyles();\r\n    // console.log(history.location.state.agree);\r\n    console.log(history.location.state);\r\n\r\n    const [next, setNext] = React.useState(0)\r\n    const [id, setId] = useState()\r\n    const formS = (p) => { setNext(p) }\r\n    useEffect(() => {\r\n        if (history.location.state) {\r\n            console.log('jj');\r\n            if (!history.location.state.agree) {\r\n                window.location = '/'\r\n            }\r\n        } else {\r\n            window.location = '/'\r\n\r\n        }\r\n        // var step = localStorage.getItem('step')\r\n        if (props.auth) {\r\n            if (localStorage.getItem('id')) {\r\n                setId(localStorage.getItem('id'))\r\n                if (localStorage.getItem('step')) {\r\n                    setNext(localStorage.getItem('step'))\r\n                    console.log(localStorage.getItem('step'));\r\n                    console.log(next);\r\n                }\r\n            } else {\r\n                history.push('/dashboard')\r\n            }\r\n        }\r\n\r\n\r\n    }, [])\r\n    const b_tech = [\r\n        \"CSE\", 'IT', 'CT'\r\n    ]\r\n    const m_tech = [\r\n        'IT', 'CT'\r\n    ]\r\n\r\n    function gaterThan(ref, msg) {\r\n        return Yup.mixed().test({\r\n            name: 'gaterThan',\r\n            exclusive: false,\r\n            message: msg || 'total>?',\r\n            params: {\r\n                reference: ref.path,\r\n            },\r\n            test: function (value) {\r\n                return this.resolve(ref) ? value <= this.resolve(ref) : true\r\n            },\r\n        });\r\n    }\r\n    Yup.addMethod(Yup.string, 'gaterThan', gaterThan);\r\n\r\n    function isSubject(ref, msg) {\r\n        return Yup.mixed().test({\r\n            name: 'isSubject',\r\n            exclusive: false,\r\n            message: msg || 'required',\r\n            params: {\r\n                reference: ref.path,\r\n            },\r\n            test: function (value) {\r\n                return this.resolve(ref) ? value ? true : false : true\r\n            },\r\n        });\r\n    }\r\n    Yup.addMethod(Yup.number, 'isSubject', isSubject);\r\n    const schema = Yup.object().shape({\r\n        applicantName: Yup.string().required('Required'),\r\n        applicantName2: Yup.string(),\r\n        applicantName3: Yup.string().required('Required'),\r\n        studentMobileNo: Yup.string().matches(`^[0-9]{10}$`, \"Incorrect Mobile no.\").required('Required'),\r\n        dob: Yup.date().required('Required'),\r\n        medium: Yup.string().required('Required'),\r\n        caste: Yup.string().required('Required'),\r\n        email: Yup.string().email().required('Required'),\r\n\r\n\r\n        rollNo12th: Yup.string().max(10, \"must be at most 10 digit\").required('Required'),\r\n        registrationNo12th: Yup.string().max(10, \"must be at most 10 digit\").required('Required'),\r\n        board12th: Yup.string().required('Required'),\r\n        passYear12th: Yup.number().max(new Date().getFullYear(), \"must be at earlier than current year\").required('Required'),\r\n        schName12th: Yup.string().required('Required'),\r\n\r\n        rollNo10th: Yup.string().max(10, \"must be at most 10 digit\").required('Required'),\r\n        registrationNo10th: Yup.string().max(10, \"must be at most 10 digit\").required('Required'),\r\n        board10th: Yup.string().required('Required'),\r\n        passYear10th: Yup.number().max(new Date().getFullYear(), \"must be at earlier than current pass year\").required('Required'),\r\n        schName10th: Yup.string().required('Required'),\r\n        percent10th: Yup.number(\"Must be a number\").positive(\"must be a positive number\").max(100).required('Required'),\r\n\r\n        IdNo: Yup.string().matches(`^([0-9]{10})|([A-Z]{5}[0-9]{4}[A-Z]{1})|(([a-zA-Z]){3}([0-9]){7}?)$`, \"Incorrect ID\").required('Required'),\r\n        idType: Yup.string().required('Required'),\r\n\r\n\r\n        marksPassLastExam: Yup.number().max(100, \"must be at most 100%\"),\r\n        yearPassLastExam: Yup.number(),\r\n        boardLastExam: Yup.string(),\r\n        nameLastExam: Yup.string(),\r\n\r\n        rollNoEE: Yup.string().required('Required'),\r\n        rankEE: Yup.number().required('Required'),\r\n        entranceType: Yup.string().required('Required'),\r\n        passYearEE: Yup.number().max(new Date().getFullYear(), \"must be at earlier than current year\").required('Required'),\r\n\r\n    })\r\n\r\n    console.log(next);\r\n    var xd = history.location.state ? history.location.state.agree : false\r\n    return (<>\r\n        {\r\n            xd &&<>\r\n                <Grid container justify='center' className={sty.heading} item>\r\n                    {/* <Typography variant='h4'>\r\n                        Government College of Engineering And Ceramic Technology\r\n                </Typography> */}\r\n                    {/* <Typography variant='h5'>\r\n                        Online admission form\r\n                </Typography> */}\r\n                </Grid>\r\n            <Grid container justify='center' alignItems='center' className={sty.root}>\r\n\r\n\r\n                <Paper className={sty.paper} elevation={10} >\r\n                    {next == 0 && <Formik\r\n                        initialValues={{\r\n                            marksPassLastExam: '',\r\n                            yearPassLastExam: '',\r\n                            boardLastExam: \"\",\r\n                            nameLastExam: \"\",\r\n\r\n                            rollNoEE: \"\",\r\n                            rankEE: \"\",\r\n                            passYearEE: \"\",\r\n                            entranceType: 'JEE',\r\n\r\n                            rollNo12th: \"\",\r\n                            registrationNo12th: \"\",\r\n                            board12th: \"WEST BENGAL COUNCIL OF HIGHER SECONDARY EDUCATION\",\r\n                            passYear12th: \"\",\r\n                            schName12th: \"\",\r\n\r\n                            rollNo10th: \"\",\r\n                            registrationNo10th: \"\",\r\n                            board10th: \"WEST BENGAL BOARD OF SECONDARY EDUCATION\",\r\n                            passYear10th: \"\",\r\n                            schName10th: \"\",\r\n                            percent10th: '',\r\n\r\n                            idType: \"AADHAAR\",\r\n                            IdNo: \"\",\r\n                            medium: \"Bengali\",\r\n                            dob: \"\",\r\n                            studentMobileNo: \"\",\r\n                            email: \"\",\r\n\r\n                            castes: \"\",\r\n                            caste: \"\",\r\n                            applicantName: \"\",\r\n                            applicantName2: \"\",\r\n                            applicantName3: \"\",\r\n                            applicantType: 'General',\r\n                            courseType: 'B.Tech',\r\n                            stream: '',\r\n                            lateral: false\r\n\r\n\r\n\r\n\r\n                        }}\r\n                        onSubmit={(values, { setSubmitting }) => {\r\n                            setSubmitting(true);\r\n                            const data = {\r\n                                applicantType: values.applicantType,\r\n                                firstName: values.applicantName,\r\n                                middleName: values.applicantName2,\r\n                                lastName: values.applicantName3,\r\n                                caste: values.castes,//\r\n                                category: values.caste,\r\n                                mobile: values.studentMobileNo,\r\n                                email: values.email,\r\n                                idType: values.idType,\r\n                                idNo: values.IdNo,\r\n                                medium: values.medium,\r\n                                dob: values.dob,\r\n                                course: values.courseType,\r\n                                stream: values.stream,\r\n                                lateral: values.lateral,\r\n                                XII: {\r\n                                    roll: values.rollNo12th,\r\n                                    registration: values.registrationNo12th,\r\n                                    board: values.board12th,\r\n                                    year: values.passYear12th,\r\n                                    school: values.schName12th,\r\n                                },\r\n                                X: {\r\n                                    roll: values.rollNo10th,\r\n                                    registration: values.registrationNo10th,\r\n                                    board: values.board10th,\r\n                                    year: values.passYear10th,\r\n                                    school: values.schName10th,\r\n                                    marks: values.percent10th,\r\n                                },\r\n                                entranceExam: {\r\n                                    roll: values.rollNoEE,\r\n                                    rank: values.rankEE,\r\n                                    year: values.passYearEE,\r\n                                    name: values.entranceType,\r\n                                },\r\n                                lastExam: {\r\n                                    marks: values.marksPassLastExam,\r\n                                    year: values.yearPassLastExam,\r\n                                    board: values.boardLastExam,\r\n                                    name: values.nameLastExam,\r\n                                }\r\n\r\n                            }\r\n                            console.log(data);\r\n                            // console.log(values);\r\n\r\n                            axios.post(`${url}/api/student`,\r\n                                data,\r\n                                {\r\n                                    headers: {\r\n                                        // 'Access-Control-Allow-Origin': '*',\r\n                                        'Content-Type': 'application/json',\r\n                                    }\r\n                                }\r\n                            ).then((resp) => {\r\n                                console.log(resp);\r\n                                if (resp.data.success === true) {\r\n                                    setSubmitting(false);\r\n                                    localStorage.setItem('step', 2)\r\n                                    localStorage.setItem('id', resp.data.id)\r\n                                    setId(resp.data.id)\r\n                                    setNext(2);\r\n                                }\r\n                                if (resp.data.error === true) {\r\n                                    setSubmitting(false);\r\n                                    alert(resp.data.message)\r\n                                }\r\n                            }\r\n                            ).catch(r => console.log(r))\r\n                            alert(JSON.stringify(data, null, 2));\r\n                        }\r\n                        }\r\n\r\n                        validationSchema={schema}\r\n                    >\r\n                        {(props) => {\r\n                            const {\r\n                                values,\r\n                                touched,\r\n                                errors,\r\n                                handleBlur,\r\n                            } = props;\r\n                            return (\r\n                                <Form>\r\n                                    <div>\r\n                                        <Field\r\n                                            name=\"applicantType\"\r\n                                            select\r\n                                            label=\"Select your applicantType\"\r\n                                            style={{ margin: 8 }}\r\n                                            required\r\n                                            className={sty.textField}\r\n                                            as={TextField}\r\n                                            // helperText=\"Select your applicant Type\"\r\n                                            onBlur={handleBlur}\r\n                                        >\r\n                                            <MenuItem value='General'>\r\n                                                General\r\n                            </MenuItem>\r\n                                            <MenuItem value='TFW'>\r\n                                                TFW\r\n                            </MenuItem>\r\n                                        </Field>\r\n                                        <Field\r\n                                            name=\"courseType\"\r\n                                            select\r\n                                            className={sty.textField}\r\n                                            style={{ margin: 8 }}\r\n                                            required\r\n                                            as={TextField}\r\n                                            label=\"Select Course Type\"\r\n                                            onBlur={handleBlur}\r\n                                        >\r\n                                            <MenuItem value='B.Tech'>\r\n                                                B.Tech                            </MenuItem>\r\n                                            <MenuItem value='M.Tech'>\r\n                                                M.Tech                            </MenuItem>\r\n                                        </Field>\r\n                                        <Field\r\n                                            name=\"stream\"\r\n                                            select\r\n                                            // label=\"Please select your applicantType\"\r\n                                            style={{ margin: 8 }}\r\n                                            className={sty.textField}\r\n                                            required\r\n                                            as={TextField}\r\n                                            label=\"Select Stream\"\r\n                                            onBlur={handleBlur}\r\n                                        >\r\n                                            {values.courseType ? values.courseType === 'B.Tech' ?\r\n                                                b_tech.map(p => {\r\n                                                    return (<MenuItem key={p} value={p}>{p}</MenuItem>)\r\n                                                }) : m_tech.map(p => {\r\n                                                    return (<MenuItem key={p} value={p}>{p}</MenuItem>)\r\n\r\n                                                }) : \"\"\r\n                                            }\r\n\r\n                                        </Field>\r\n                                        <Grid style={{ display: 'inline-flex' }}>\r\n\r\n                                            <Field\r\n                                                onBlur={handleBlur}\r\n                                                name='lateral'\r\n                                                as={Checkbox}\r\n                                            /><p>Lateral Entry</p>\r\n                                        </Grid>\r\n                                    </div>\r\n                                    <Divider className={sty.divider} />\r\n                                    <div>\r\n                                        <Field\r\n                                            name=\"applicantName\"\r\n                                            label=\"Applicant First Name\"\r\n                                            style={{ margin: 8 }}\r\n                                            placeholder=\"First Name\"\r\n                                            margin=\"normal\"\r\n                                            error={errors.applicantName && touched.applicantName}\r\n                                            helperText={(errors.applicantName && touched.applicantName) && errors.applicantName}\r\n                                            as={TextField}\r\n                                        />\r\n                                        <Field\r\n                                            name=\"applicantName2\"\r\n                                            label=\"Middle Name(if any)\"\r\n                                            style={{ margin: 8 }}\r\n                                            placeholder=\"Middle Name\"\r\n                                            margin=\"normal\"\r\n                                            error={errors.applicantName2 && touched.applicantName2}\r\n                                            helperText={(errors.applicantName2 && touched.applicantName2) && errors.applicantName2}\r\n                                            as={TextField}\r\n                                        />\r\n                                        <Field\r\n                                            name=\"applicantName3\"\r\n                                            label=\"Applicant Last Name\"\r\n                                            style={{ margin: 8 }}\r\n                                            placeholder=\"Last Name\"\r\n                                            margin=\"normal\"\r\n                                            error={errors.applicantName3 && touched.applicantName3}\r\n                                            helperText={(errors.applicantName3 && touched.applicantName3) && errors.applicantName3}\r\n                                            as={TextField}\r\n                                        />\r\n\r\n                                        <Field\r\n                                            label=\"Categories\"\r\n                                            name=\"caste\"\r\n                                            error={errors.caste && touched.caste}\r\n                                            helperText={(errors.caste && touched.caste) && errors.caste}\r\n                                            select\r\n                                            required\r\n                                            margin='dense'\r\n                                            className={sty.textField}\r\n                                            as={TextField}\r\n                                        >\r\n                                            <MenuItem value='General'>\r\n                                                General\r\n                            </MenuItem>\r\n                                            <MenuItem value='SC'>\r\n                                                SC\r\n                            </MenuItem>\r\n                                            <MenuItem value='ST'>\r\n                                                ST\r\n                            </MenuItem>\r\n                                            <MenuItem value='OBC-A'>\r\n                                                OBC-A\r\n                            </MenuItem>\r\n                                            <MenuItem value='OBC-B'>\r\n                                                OBC-B\r\n                            </MenuItem>\r\n                                        </Field>\r\n                                        {values.caste ? values.caste !== \"General\" &&\r\n                                            <Field\r\n                                                name=\"castes\"\r\n                                                label=\"Select Sub caste\"\r\n                                                style={{ margin: 8 }}\r\n                                                margin=\"normal\"\r\n                                                required\r\n                                                error={errors.castes && touched.castes}\r\n                                                helperText={(errors.castes && touched.castes) && errors.castes}\r\n                                                as={TextField}\r\n                                            /> : null\r\n                                        }\r\n                                        <Field\r\n                                            label=\"Student Mobile No\"\r\n                                            name=\"studentMobileNo\"\r\n                                            type='number'\r\n                                            InputProps={{\r\n                                                startAdornment: (\r\n                                                    <InputAdornment position=\"start\">\r\n                                                        +91\r\n                                                    </InputAdornment>\r\n                                                )\r\n                                            }}\r\n                                            className={sty.textField}\r\n                                            margin=\"dense\"\r\n                                            error={errors.studentMobileNo && touched.studentMobileNo}\r\n                                            helperText={(errors.studentMobileNo && touched.studentMobileNo) && errors.studentMobileNo}\r\n                                            as={TextField}\r\n                                        />\r\n                                        <Field\r\n                                            InputLabelProps={{\r\n                                                shrink: true,\r\n                                            }}\r\n                                            label=\"Date of Birth\"\r\n                                            name=\"dob\"\r\n                                            className={sty.textField}\r\n                                            // helperText=\"dd.mm.yyy\"\r\n                                            margin='dense'\r\n                                            type='date'\r\n                                            error={errors.dob && touched.dob}\r\n                                            helperText={(errors.dob && touched.dob) && errors.dob}\r\n                                            as={TextField}\r\n                                        />\r\n\r\n                                        <Field\r\n                                            label=\"Medium\"\r\n                                            name=\"medium\"\r\n                                            required\r\n                                            className={sty.textField}\r\n                                            defaultValue='Bengali'\r\n                                            margin='dense'\r\n                                            select\r\n                                            error={errors.medium && touched.medium}\r\n                                            helperText={(errors.medium && touched.medium) && errors.medium}\r\n                                            as={TextField}\r\n                                        >\r\n                                            <MenuItem value='Bengali'>\r\n                                                Bengali\r\n                            </MenuItem>\r\n                                            <MenuItem value='English'>\r\n                                                English\r\n                            </MenuItem>\r\n                                        </Field>\r\n\r\n                                        <Field\r\n                                            placeholder=\"Enter ID No\"\r\n                                            name=\"IdNo\"\r\n                                            margin='dense'\r\n                                            className={sty.textField}\r\n                                            style={{ width: 'auto' }}\r\n                                            error={errors.IdNo && touched.IdNo}\r\n                                            helperText={(errors.IdNo && touched.IdNo) && errors.IdNo}\r\n                                            as={TextField}\r\n                                            InputProps={{\r\n                                                startAdornment: (\r\n                                                    <Field\r\n                                                        label=\"Select ID\"\r\n                                                        variant='filled'\r\n                                                        size=\"small\"\r\n                                                        name=\"idType\"\r\n                                                        style={{ width: '20ch', marginRight: 12 }}\r\n                                                        classes={{ inputBase: sty.id }}\r\n                                                        select\r\n                                                        required\r\n                                                        error={errors.idType && touched.idType}\r\n                                                        helperText={(errors.idType && touched.idType) && errors.idType}\r\n                                                        as={TextField}>\r\n                                                        <MenuItem value='AADHAAR'>\r\n                                                            AADHAAR\r\n                                </MenuItem>\r\n                                                        <MenuItem value='PAN'>\r\n                                                            PAN\r\n                                </MenuItem>\r\n                                                        <MenuItem value='EPIC'>\r\n                                                            EPIC\r\n                                </MenuItem>\r\n                                                    </Field>\r\n                                                )\r\n                                            }}\r\n                                        >\r\n                                        </Field>\r\n                                        <Field\r\n                                            name=\"email\"\r\n                                            className={sty.textField}\r\n                                            error={errors.email && touched.email}\r\n                                            helperText={(errors.email && touched.email) && errors.email}\r\n\r\n                                            as={TextField}\r\n                                            label=\"E-mail\"\r\n                                        />\r\n                                    </div>\r\n                                    <Divider className={sty.divider} />\r\n                                    <div>\r\n                                        <Typography variant='subtitle1'>Madhyamik (10th Level) details</Typography>\r\n                                        <Field\r\n                                            label=\"Name of School\"\r\n                                            name=\"schName10th\"\r\n                                            fullWidth\r\n                                            style={{ margin: 8 }}\r\n                                            error={errors.schName10th && touched.schName10th}\r\n                                            helperText={(errors.schName10th && touched.schName10th) && errors.schName10th}\r\n                                            as={TextField}\r\n                                        />\r\n                                        <Field\r\n                                            name=\"passYear10th\"\r\n                                            type='number'\r\n                                            label=\"Year of Passing\"\r\n                                            style={{ margin: 8 }}\r\n                                            margin='dense'\r\n                                            error={errors.passYear10th && touched.passYear10th}\r\n                                            helperText={(errors.passYear10th && touched.passYear10th) && errors.passYear10th}\r\n                                            as={TextField}\r\n                                        />\r\n\r\n                                        <Field\r\n                                            name=\"board10th\"\r\n                                            select\r\n                                            required\r\n                                            label=\"Name of Board\"\r\n                                            style={{ margin: 8 }}\r\n                                            className={sty.textField}\r\n                                            error={errors.board10th && touched.board10th}\r\n                                            helperText={(errors.board10th && touched.board10th) && errors.board10th}\r\n                                            as={TextField}\r\n                                        >\r\n                                            <MenuItem value='WEST BENGAL BOARD OF SECONDARY EDUCATION'>\r\n                                                WEST BENGAL BOARD OF SECONDARY EDUCATION\r\n                            </MenuItem>\r\n                                            <MenuItem value='CENTRAL BOARD OF SECONDARY EDUCATION'>\r\n                                                CENTRAL BOARD OF SECONDARY EDUCATION\r\n                            </MenuItem>\r\n                                            <MenuItem value='COUNCIL FOR THE INDIAN SCHOOL CERTIFICATE EXAMINATION'>\r\n                                                COUNCIL FOR THE INDIAN SCHOOL CERTIFICATE EXAMINATION\r\n                            </MenuItem>\r\n                                            <MenuItem value='OTHERS'>\r\n                                                OTHERS\r\n                           </MenuItem>\r\n                                        </Field>\r\n                                        <Field\r\n                                            error={errors.registrationNo10th && touched.registrationNo10th}\r\n                                            helperText={(errors.registrationNo10th && touched.registrationNo10th) && errors.registrationNo10th}\r\n                                            as={TextField}\r\n\r\n                                            name=\"registrationNo10th\"\r\n                                            label=\"10th Registration No.\"\r\n                                            style={{ margin: 8 }}\r\n                                            margin='dense'\r\n                                        />\r\n                                        <Field\r\n                                            error={errors.rollNo10th && touched.rollNo10th}\r\n                                            helperText={(errors.rollNo10th && touched.rollNo10th) && errors.rollNo10th}\r\n                                            as={TextField}\r\n\r\n                                            name=\"rollNo10th\"\r\n                                            label=\"10th Roll No\"\r\n                                            style={{ margin: 8 }}\r\n                                            margin='dense'\r\n                                        />\r\n                                        <Field\r\n                                            error={errors.percent10th && touched.percent10th}\r\n                                            helperText={(errors.percent10th && touched.percent10th) && errors.percent10th}\r\n                                            as={TextField}\r\n\r\n                                            name=\"percent10th\"\r\n                                            label=\"Marks %\"\r\n                                            style={{ margin: 8 }}\r\n                                            type='number'\r\n                                            margin='dense'\r\n                                        />\r\n                                    </div>\r\n                                    <Divider className={sty.divider} />\r\n                                    <div>\r\n                                        <Typography variant='subtitle1'>Higher Secondary (12th Level) details</Typography>\r\n                                        <Field\r\n                                            label=\"Name of School\"\r\n                                            name=\"schName12th\"\r\n                                            error={errors.schName12th && touched.schName12th}\r\n                                            helperText={(errors.schName12th && touched.schName12th) && errors.schName12th}\r\n                                            as={TextField}\r\n                                            fullWidth\r\n                                            style={{ margin: 8 }}\r\n                                        />\r\n                                        <Field\r\n                                            error={errors.passYear12th && touched.passYear12th}\r\n                                            helperText={(errors.passYear12th && touched.passYear12th) && errors.passYear12th}\r\n                                            as={TextField}\r\n\r\n                                            type='number'\r\n                                            name=\"passYear12th\"\r\n                                            label=\"Year of Passing\"\r\n                                            style={{ margin: 8 }}\r\n                                            margin='dense'\r\n                                        />\r\n                                        <Field\r\n                                            name=\"board12th\"\r\n                                            required\r\n                                            error={errors.board12th && touched.board12th}\r\n                                            helperText={(errors.board12th && touched.board12th) && errors.board12th}\r\n                                            as={TextField}\r\n                                            select\r\n                                            label=\"Name of Board\"\r\n                                            style={{ margin: 8 }}\r\n                                            className={sty.textField}\r\n                                        >\r\n                                            <MenuItem value='WEST BENGAL COUNCIL OF HIGHER SECONDARY EDUCATION'>\r\n                                                WEST BENGAL COUNCIL OF HIGHER SECONDARY EDUCATION\r\n                            </MenuItem>\r\n                                            <MenuItem value='CENTRAL BOARD OF SECONDARY EDUCATION'>\r\n                                                CENTRAL BOARD OF SECONDARY EDUCATION\r\n                            </MenuItem>\r\n                                            <MenuItem value='COUNCIL FOR THE INDIAN SCHOOL CERTIFICATE EXAMINATION'>\r\n                                                COUNCIL FOR THE INDIAN SCHOOL CERTIFICATE EXAMINATION\r\n                            </MenuItem>\r\n                                            <MenuItem value='OTHERS'>\r\n                                                OTHERS\r\n                           </MenuItem>\r\n\r\n\r\n                                        </Field>\r\n                                        <Field\r\n                                            error={errors.registrationNo12th && touched.registrationNo12th}\r\n                                            helperText={(errors.registrationNo12th && touched.registrationNo12th) && errors.registrationNo12th}\r\n                                            as={TextField}\r\n\r\n                                            name=\"registrationNo12th\"\r\n                                            label=\"HS Registration No.\"\r\n                                            style={{ margin: 8 }}\r\n                                            margin='dense'\r\n                                        />\r\n                                        <Field\r\n                                            error={errors.rollNo12th && touched.rollNo12th}\r\n                                            helperText={(errors.rollNo12th && touched.rollNo12th) && errors.rollNo12th}\r\n                                            as={TextField}\r\n\r\n                                            name=\"rollNo12th\"\r\n                                            label=\"HS Roll No\"\r\n                                            style={{ margin: 8 }}\r\n                                            // type='number'\r\n                                            margin='dense'\r\n                                        />\r\n\r\n                                    </div>\r\n                                    <Divider className={sty.divider} />\r\n                                    <div>\r\n                                        <Typography variant='subtitle1'> Entrance details</Typography>\r\n\r\n                                        <Field\r\n                                            error={errors.entranceType && touched.entranceType}\r\n                                            helperText={(errors.entranceType && touched.entranceType) && errors.entranceType}\r\n                                            as={TextField}\r\n                                            select\r\n                                            name=\"entranceType\"\r\n                                            label=\"Select Entrance Exam\"\r\n                                            className={sty.textField}\r\n                                            margin='dense'\r\n                                        >\r\n                                            <MenuItem value='JEE'>JEE</MenuItem>\r\n                                            <MenuItem value='JELET'>JELET</MenuItem>\r\n                                        </Field>\r\n\r\n                                        <Field\r\n                                            error={errors.rankEE && touched.rankEE}\r\n                                            helperText={(errors.rankEE && touched.rankEE) && errors.rankEE}\r\n                                            as={TextField}\r\n\r\n                                            name=\"rankEE\"\r\n                                            label={values.entranceType + ` Rank`}\r\n                                            style={{ margin: 8 }}\r\n                                            margin='dense'\r\n                                            type='number'\r\n                                        />\r\n                                        <Field\r\n                                            error={errors.rollNoEE && touched.rollNoEE}\r\n                                            helperText={(errors.rollNoEE && touched.rollNoEE) && errors.rollNoEE}\r\n                                            as={TextField}\r\n                                            name=\"rollNoEE\"\r\n                                            label={values.entranceType + ` Roll Number`}\r\n                                            style={{ margin: 8 }}\r\n                                            margin='dense'\r\n                                        />\r\n                                        <Field\r\n                                            error={errors.passYearEE && touched.passYearEE}\r\n                                            helperText={(errors.passYearEE && touched.passYearEE) && errors.passYearEE}\r\n                                            as={TextField}\r\n\r\n                                            type='number'\r\n                                            name=\"passYearEE\"\r\n                                            label={values.entranceType + ` Year of Passing`}\r\n                                            style={{ margin: 8 }}\r\n                                            margin='dense'\r\n                                        />\r\n\r\n                                    </div>\r\n                                    <Divider className={sty.divider} />\r\n                                    <div>\r\n                                        <Typography variant='subtitle1'>Details of Last exam / Graduation (if any)</Typography>\r\n\r\n                                        <Field\r\n                                            error={errors.nameLastExam && touched.nameLastExam}\r\n                                            helperText={(errors.nameLastExam && touched.nameLastExam) && errors.nameLastExam}\r\n                                            as={TextField}\r\n                                            name=\"nameLastExam\"\r\n                                            label=\"Name of Exam\"\r\n                                            style={{ margin: 8 }}\r\n                                            margin='dense'\r\n                                            type='text'\r\n                                        />\r\n                                        <Field\r\n                                            error={errors.boardLastExam && touched.boardLastExam}\r\n                                            helperText={(errors.boardLastExam && touched.boardLastExam) && errors.boardLastExam}\r\n                                            as={TextField}\r\n                                            name=\"boardLastExam\"\r\n                                            label=\"Board / University\"\r\n                                            style={{ margin: 8 }}\r\n                                            margin='dense'\r\n                                        />\r\n                                        <Field\r\n                                            error={errors.yearPassLastExam && touched.yearPassLastExam}\r\n                                            helperText={(errors.yearPassLastExam && touched.yearPassLastExam) && errors.yearPassLastExam}\r\n                                            as={TextField}\r\n                                            name=\"yearPassLastExam\"\r\n                                            label=\"Year of Passing\"\r\n                                            style={{ margin: 8 }}\r\n                                            type='number'\r\n                                            margin='dense'\r\n                                        />\r\n                                        <Field\r\n                                            error={errors.marksPassLastExam && touched.marksPassLastExam}\r\n                                            helperText={(errors.marksPassLastExam && touched.marksPassLastExam) && errors.marksPassLastExam}\r\n                                            as={TextField}\r\n                                            name=\"marksPassLastExam\"\r\n                                            label=\"Marks %\"\r\n                                            style={{ margin: 8 }}\r\n                                            type='number'\r\n                                            margin='dense'\r\n                                        />\r\n                                    </div>\r\n                                    <Divider className={sty.divider} />\r\n                                    <br />\r\n                                    <Fab style={{ margin: '20px 0' }} color=\"primary\" variant='extended' type='submit' >submit & Next</Fab>\r\n                                </Form>)\r\n                        }}\r\n                    </Formik>\r\n                    }\r\n                    {/* {next === 1 && <Form1 success={formS} />} */}\r\n                    {next == 2 && <Form2 success={formS} id={id} />}\r\n                    {next == 3 && <Form3 id={id} />}\r\n                </Paper>\r\n            </Grid >\r\n        </>}</>);\r\n}\r\n\r\nexport default FormMain","\r\nimport React from 'react'\r\nimport { Grid, Paper, Typography, makeStyles, Button, Checkbox } from '@material-ui/core'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { toast } from 'react-toastify'\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n    paper: {\r\n        padding: 12,\r\n        margin: 20,\r\n        width: '100%'\r\n    }\r\n}))\r\n\r\nconst Test = () => {\r\n    const sty = useStyle()\r\n    const history = useHistory()\r\n    const [agree, setAgree] = React.useState(false)\r\n\r\n    function processNext() {\r\n        if (agree) {\r\n            history.push('/form', { agree: agree })\r\n        } else {\r\n\r\n            toast.warn('You have to agree the terms & conditions to proceed further !!')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Grid style={{ backgroundColor: '#eee' }} container>\r\n            <Paper className={sty.paper} style={{ textAlign: \"justify\" }}>\r\n                <Typography align='center' gutterBottom variant='h4'>ADMISSION NOTICE {new Date().getFullYear()}</Typography>\r\n                <Typography variant='subtitle2'>Online application for admission to B. Tech /M. Tech program for the academic session 2019-20 will commence from 04th July 2019 at 10 AM only through web portal of the college website <a target='_blank' rel=\"noopener noreferrer\" href='http://www.gcect.ac.in'>www.gcect.ac.in</a>.</Typography>\r\n                <p><strong>For any online application related issue and queries, please write us to:</strong><a href=\"mailto:gcectwb@gmail.com?subject=Enquiry\">gcectwb@gmail.com</a></p>\r\n                <p><strong>ONLINE ADMISSION PROCEDURE</strong></p>\r\n                <p>1. Visit College website and click&nbsp;Apply Online tab.</p>\r\n                <p>2. Please read the instructions carefully before you proceed.</p>\r\n                <p>3. Next, read the terms &amp; conditions carefully and only after accepting the <strong><em>Terms &amp; Conditions</em></strong>, you can proceed further.</p>\r\n                <p>4. At the next page, choose your admission status as regular or regular with TFW and enter the details including the year of passing of your 10 + 2 Examination.</p>\r\n                <p>5. Now choose whether you belong to SC/ST category or not.</p>\r\n                <p>6. Now enter the marks of different subjects you obtained in the higher secondary examination.</p>\r\n                <p><strong>You must have passed 10+2 examination with Physics and Mathematics as compulsory subjects along with one of the Chemistry/ Biotechnology/ Biology/ Technical Vocational subject and Obtained at least 45% marks (40% in case of candidate belonging to reserved category) in the above subjects taken together. You also </strong><strong>have to pass individually both theory and practical in all subjects at 10+2 level for getting admission in any course of our institute.</strong></p>\r\n                <p>7. You must have a valid WBJEE rank along with domicile certificate in proof of permanent residency inthe state of West Bengal.</p>\r\n                <p>8. You must have taken&nbsp;&nbsp; provisional admission attending any Reporting Centre as specified by West Bengal Joint Entrance Board in the year 2019.</p>\r\n                <p>9. Candidates are eligible to take admission in a specific branch of B. Tech program based on the recommendation of West Bengal Joint Entrance e-counselling portal.</p>\r\n                <p>10. An application number will be generated and a SMS will be sent to the registered mobile number with the application number for login.</p>\r\n                <p>11. Login with the application number or registered mobile number and date of birth as password. Now upload your recent colour photo &amp; signature.</p>\r\n                <p>12. Next, download your application form with uploaded photo &amp; signature and take a print out.</p>\r\n                <p>13. Finally goto Payment page &amp; take a print out of generated challan.</p>\r\n                <p>14. Pay Admission and other fees as appeared in the challan in State Bank of India, Beliaghata Branch.</p>\r\n                <p>After remitting the fees, wait for 2 working days and then check by logging in whether your payment status shows successful.</p>\r\n                <p>N.B. Payment can also be made through NEFT in the specified Bank Account and the NEFT transaction slip is to be submitted in original at the time of document verification.</p>\r\n                <p>15. As per the norms of UGC,an affidavit on anti-ragging is to be submitted online (<a target='_blank' rel=\"noopener noreferrer\" href=\"http://www.antiragging.in/Site/Affidavits_Registration.aspx\">here</a>) and hard copy of the anti-ragging affidavit is to be submitted at the time of document verification by the student and his/her guardian.</p>\r\n                <p><strong><em>LAST DATE OF ONLINE APPLICATION AND SUBMISSION OF APPLICATION FEES IS 20th&nbsp;&nbsp;JULY, 2019 UP TO 4.00 P.M.</em></strong></p>\r\n                <p><strong>THE FOLLOWING DOCUMENTS TO BE PRODUCED FOR PHYSICALVERIFICATION</strong></p>\r\n                <p><strong>a. Signed downloaded application form. </strong></p>\r\n                <p><strong>b. Provisional admission letter issued by R.C. in-charge in original.</strong></p>\r\n                <p><strong>c. Original admit card of WBJEE-2019.</strong></p>\r\n                <p><strong>d. Original rank card of WBJEE-2019.</strong></p>\r\n                <p><strong>e. Domicile certificate from the competent authorities as per WBJEEB proforma in original.</strong></p>\r\n                <p><strong>f. Original certificatefor age verification (Birth certificate or certificate/admit card of Madhyamik or equivalent examination where the date of birth is mentioned).</strong></p>\r\n                <p><strong>g. Original marks sheet of 10th and 12thstandard or equivalent examinations from recognised board. </strong></p>\r\n                <p><strong>h. Cast certificate/disability certificate (If any) issued in favour of the candidate (Issued by the competent authority of the Government of West Bengal).</strong></p>\r\n                <p><strong>i. Original bank challan (Candidate&rsquo;s copy)/NEFT Transaction slip [After depositing fees to the Bank]. </strong></p>\r\n                <p><strong>j. Income Certificate in original from the competent authority as uploaded in WBJEE-2019 portal for TFW candidates.</strong></p>\r\n                <p><strong>k. Physical fitness certificate and eyesight certificate from a registered medical practitioner&nbsp;in original. </strong></p>\r\n                <p><strong>l. School leaving/Character certificate issued by the Head of the institute last attended in original.&nbsp; </strong></p>\r\n                <p><strong>m. One passport size colour photo.</strong></p>\r\n                <p><strong>n. Original annual family income certificate from the competent authorities (for other than TFW candidates)</strong></p>\r\n                <p><strong>o. PHOTOCOPIES OF ALL THE DOCUMENTS MENTIONED ABOVE.</strong></p>\r\n                <p>16. Check college website regularly for Commencement of classes and other academic notices and regulations.</p>\r\n                <p><strong>For any Online Application related issue, please write us to:</strong></p>\r\n                <p><a href=\"mailto:gcectwb@gmail.com\">gcectwb@gmail.com</a> or contact Mr. Jayanta Kumar Chowdhury, Registrar (033) 2363-2072.</p>\r\n            </Paper>\r\n            <Paper className={sty.paper} style={{ textAlign: \"justify\" }}>\r\n                <Typography align=\"center\" variant=\"h4\" gutterBottom>Terms & Conditions</Typography>\r\n                {/* <p> */}\r\n                <p>I have very carefully read the regulation of the institute and have understood that if my class attendance in an academic semester falls&nbsp;<strong><em>below 75%</em></strong> of the total number of classes held in the semester would render me <strong>DIS-QUALIFIED&nbsp;</strong>&nbsp;to seat for the end semester examination of that academic session as per the existing ACADEMIC REGULATION of the institute.</p>\r\n\r\n                <p>I further declare that I shall&nbsp;<strong>NOT</strong> request the college authorities for any relaxation/exemption on attendance percentage on any ground whatsoever.</p>\r\n\r\n                <p>In the light of the above-mentioned regulations I promise that</p>\r\n\r\n                <p>1. I will <strong>NOT&nbsp;</strong>take part in ragging and in the event of any such happening, will &nbsp;intimate&nbsp;&nbsp;the college authority immediately.</p>\r\n\r\n                <p>2. I will <strong>NOT</strong> take up any job assignment, in the form of employment or business, during my class-hours of&nbsp;&nbsp;the College.</p>\r\n\r\n                <p>3. I will <strong>NOT</strong> attend any coaching centre or private tuition or any training institute, during my class-hours of&nbsp;&nbsp;the College.</p>\r\n\r\n                <p>&nbsp;</p>\r\n\r\n                <p>In addition to the above-mentioned pledges made by me, I further commit that I will regularly follow the Notices stuck on the college notice board and/or uploaded on the college website.</p>\r\n                {/* </p> */}\r\n            </Paper>\r\n\r\n            <Paper className={sty.paper} style={{ textAlign: \"justify\" }}>\r\n                <Typography align='center' variant=\"h4\" gutterBottom>Important Documents</Typography>\r\n                <div align=\"left\">\r\n                    <h3><a href=\"admin/pages/pic/download/College Brochure.pdf\" target=\"_blank\" rel=\"noopener noreferrer\">College Brochure</a></h3>\r\n                    {/* <!--<h3><a href=\"docs/College Brochure.pdf\" target=\"_blank\">College Brochure</a></h3>--> */}\r\n                </div>\r\n            </Paper>\r\n\r\n            <Paper className={sty.paper} style={{ color: '#f00' }}>\r\n                <center>\r\n                    <Typography variant=\"h4\" gutterBottom>!!! Notice !!!</Typography>\r\n                    <br />\r\n                    <p >Please Go to Student Login and Update Payment and Upload Photo &amp; Signature to complete the Application Process</p>\r\n                    <p >You will get SMS alert with your Application Id, Username &amp; Password only after completion of the 3rd part of the application form which includes your Photo and signature.</p>\r\n                    <p >If in case SMS with login details will not reach yor mobile use your registered <strong>mobile number (xxxxxxxxxx)</strong> &amp; <strong>Date of Birth (YYYY-MM-DD)</strong> <br />\r\n                          as the <strong>User Id &amp; Password</strong></p>\r\n                </center>\r\n            </Paper>\r\n            <p style={{ margin: 12, align: 'center' }}>I have read the instructions (including  College admission rules) carefully and I shall abide by the decision taken by the college authority in this regard.\r\n             </p> <br />\r\n            <table width=\"100%\" style={{ marginBottom: 20 }} border=\"0\" cellSpacing=\"0\" cellPadding=\"0\">\r\n                <tbody>\r\n                <tr>\r\n                    <td width=\"40%\">&nbsp;</td>\r\n                    <td width=\"4%\">\r\n                        <div align=\"center\">\r\n                            <Checkbox onChange={() => { setAgree(!agree) }} />\r\n                        </div>\r\n                    </td>\r\n                    <td width=\"56%\">I Agree all terms &amp; conditions</td>\r\n                </tr>\r\n                <tr>\r\n                    <td colSpan=\"4\"><div align=\"center\"><br />\r\n                        <Button onClick={processNext} variant='contained' color='primary'>Proceed </Button>\r\n\r\n                    </div></td>\r\n                </tr>\r\n            </tbody>\r\n            </table>\r\n\r\n\r\n            {/* </Paper> */}\r\n        </Grid >\r\n\r\n    )\r\n}\r\n\r\nexport default Test","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { Grid, Typography, Paper, List, ListItemText, ListItem, Divider } from '@material-ui/core';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { url } from './config/config';\r\nimport PropType from 'prop-types';\r\nimport { toast } from 'react-toastify';\r\nconst FileDownload = require(\"js-file-download\");\r\nconst useStyles = makeStyles((theme) => ({\r\n  rootMain:{\r\n    minHeight:'calc(100vh - 64px)',\r\n    backgroundColor: '#eee',\r\n    [theme.breakpoints.down('xs')]:{\r\n\r\n    }\r\n  },\r\n  root: {\r\n    padding: ' 12px 50px', \r\n    [theme.breakpoints.down('sm')]: { \r\n      padding: 3 \r\n    }\r\n  },\r\n  paper: {\r\n    padding: 15,\r\n    marginBottom: 12,\r\n    minWidth: '50%',\r\n    [theme.breakpoints.down('xs')]: {\r\n      width: 'inherit',\r\n      padding: '12px 3px'\r\n      // overflowX:'auto'\r\n    }\r\n\r\n  },\r\n  banner: {\r\n    backgroundImage: \"url(\" + require('./banner.jpg') + \")\",\r\n    width: '100%',\r\n    height: '267px',\r\n    backgroundPositionX: 'right',\r\n    backgroundPositionY: 'bottom',\r\n\r\n    background: 'center',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundSize: 'cover',\r\n    [theme.breakpoints.down('xs')]: {\r\n      height: '155px',\r\n    }\r\n  }\r\n}));\r\n\r\n\r\nDashboard.propType={\r\n  id:PropType.string.isRequired\r\n}\r\nexport default function Dashboard(props) {\r\n  const sty = useStyles();\r\n  const history = useHistory()\r\n  const dnlApplication = () => {\r\n    // window.location=`${url}/api/student/${props.id}/challan` \r\n    fetch(`${url}/api/student/${props.id}/application`,{\r\n      method: 'GET',\r\n      credentials: 'include',\r\n      headers:{\r\n        'Content-Type':'Application/pdf'\r\n      }\r\n  }).then(response => response.blob()).then(response =>\r\n    FileDownload(response,`Application${props.id}.pdf`) \r\n    ).catch(err=>{\r\n      toast.error(err.message)\r\n    })\r\n  }\r\n  const printApplication = () => { \r\n    fetch(`${url}/api/student/${props.id}/challan`,{\r\n      method: 'GET',\r\n      credentials: 'include',\r\n      headers:{\r\n        'Content-Type':'Application/pdf'\r\n      }\r\n  }).then(response => response.blob()).then(response =>\r\n    FileDownload(response,`Challan${props.id}.pdf`) \r\n    ).catch(err=>{\r\n      toast.error(err.message)\r\n    })\r\n  }\r\n  const upApplication = () => {\r\n    history.push('/upload')\r\n  }\r\n  const payApplication = () => {\r\n    history.push('/pay')\r\n  }\r\n\r\n\r\n  return (<div className={sty.rootMain}>\r\n    <div className={sty.banner} />\r\n    <Grid container justify='center' className={sty.root}>\r\n      <Paper className={sty.paper}>\r\n        <Typography variant='h5'>Application No : {props.id}</Typography>\r\n        <Typography variant='caption' color='error'>Please, deposit application fee to the bank and then update your Payment Status for payment verification.<br/> After verification \"Application Form Print\" option will be activated.</Typography>\r\n        <Divider/>\r\n        <List>\r\n          <ListItem onClick={printApplication} button>\r\n            <ListItemText primary='Print Application Challan' />\r\n          </ListItem>\r\n          <ListItem onClick={upApplication} disabled button>\r\n            <ListItemText primary='Upload Documents' />\r\n          </ListItem>\r\n          <ListItem onClick={payApplication} button>\r\n            <ListItemText primary='Update Payment status' />\r\n          </ListItem>\r\n          <ListItem onClick={dnlApplication} button>\r\n            <ListItemText primary='Print Application Application' />\r\n          </ListItem>\r\n        </List>\r\n      </Paper>\r\n    </Grid>\r\n  </div>);\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport {Toolbar,Link, CircularProgress} from '@material-ui/core'; \r\nimport Button from '@material-ui/core/Button'; \r\nimport { Link as RouterLink, useHistory } from 'react-router-dom';\r\nimport PropType from 'prop-types'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  grow:{\r\n    flexGrow:1\r\n  },\r\n  title: { \r\n    color: '#fff',\r\n    fontSize: 'x-large', \r\n\r\n},\r\n}));\r\n\r\nfunction Appbar(props) {\r\n  const classes = useStyles();\r\n  const history=useHistory()\r\n\r\nconst login=()=>{\r\n  history.push('/login')\r\n}\r\nconsole.log(props.auth);\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n         \r\n          \r\n          <Link to='/' underline='none' component={RouterLink} className={classes.title} variant=\"h6\" noWrap>\r\n          GCECT Admission Portal\r\n          </Link>\r\n          <div className={classes.grow} />\r\n         {props.auth===true ? <Button onClick={props.out} color=\"inherit\">Logout</Button>\r\n        :props.auth===false ?<Button onClick={login} color=\"inherit\">Login</Button>\r\n        :props.auth===null?<CircularProgress/>:\"\"}\r\n         </Toolbar>\r\n      </AppBar> \r\n    </div>\r\n  );\r\n}\r\nAppbar.propType = { \r\n  auth: PropType.bool.isRequired,\r\n}\r\nexport default Appbar;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Grid, Typography, Paper, TextField, Divider, Button } from '@material-ui/core';\r\nimport { useHistory } from 'react-router-dom';\r\nimport PropType from 'prop-types'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: ' 12px 50px',\r\n    // lineHeight:1\r\n    backgroundColor: '#eee',\r\n    // minHeight: 'calc(100vh - )',\r\n    [theme.breakpoints.down('sm')]: {\r\n      // width: 'inherit',\r\n      padding: 3\r\n      // overflowX:'auto'\r\n    }\r\n  },\r\n  paper: {\r\n    padding: 15,\r\n    marginBottom: 12,\r\n    minWidth: '50%',\r\n    [theme.breakpoints.down('xs')]: {\r\n      width: 'inherit',\r\n      padding: '12px 3px'\r\n      // overflowX:'auto'\r\n    }\r\n\r\n  },\r\n  banner: {\r\n    backgroundImage: \"url(\" + require('./banner.jpg') + \")\",\r\n    width: '100%',\r\n    height: '267px',\r\n    backgroundPositionX: 'right',\r\n    backgroundPositionY: 'bottom',\r\n\r\n    background: 'center',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundSize: 'cover',\r\n    [theme.breakpoints.down('xs')]: {\r\n      height: '155px',\r\n    }\r\n  },\r\n  inputx:{\r\n      margin:'35px 0 2px'\r\n  },\r\n  input:{\r\n      margin:'5px 12px 12px 0'\r\n  }\r\n}));\r\nUpload.propType = { \r\n  id: PropType.string.isRequired,\r\n}\r\nexport default function Upload() {\r\n  const sty = useStyles();\r\n  const history = useHistory()\r\n  const [state,setState]=React.useState({})\r\n  const handleChange=(e)=>{\r\n      setState({[e.target.name]:e.target.file[0]})\r\n  }\r\n  const x=()=>{\r\n    //   state.x\r\n  }\r\n  const xi=()=>{\r\n    //   state.x\r\n  }\r\n  const jee=()=>{\r\n    //   state.x\r\n  }\r\n  const id=()=>{\r\n    //   state.x\r\n  }\r\n  const income=()=>{\r\n    //   state.x\r\n  }\r\n  const rc=()=>{\r\n    //   state.x\r\n  }\r\n  const caste=()=>{\r\n    //   state.x\r\n  }\r\n  const pwd=()=>{\r\n    //   state.x\r\n  }\r\n\r\n\r\n  return (<>\r\n    <div className={sty.banner} />\r\n    <Grid container justify='center' className={sty.root}>\r\n      <Paper className={sty.paper}>\r\n        <Typography variant='h5'>Application No : {12}</Typography>\r\n        <Typography variant='caption' color='error'>\tMax Size for Both file should be maximum 500 KB\t\r\n \t<br/>JPG, JPEG, PDF files are allowed only</Typography>\r\n        <Divider />\r\n\r\n        <Typography variant='subtitle1' color='primary' className={sty.inputx}>JEE Rank Card</Typography>\r\n        <TextField type='file' name='jee' onChange={handleChange} className={sty.input}  />\r\n        <Button variant='contained' color='primary' onClick={jee} >Upload</Button>\r\n        \r\n        <Typography variant='subtitle1' color='primary' className={sty.inputx}>10th Result</Typography>\r\n        <TextField type='file'  name='x' className={sty.input}  onChange={handleChange}/>\r\n        <Button variant='contained' color='primary' onClick={x}>Upload</Button>\r\n        \r\n        <Typography variant='subtitle1' color='primary' className={sty.inputx}>12th Result</Typography>\r\n        <TextField type='file'  name='xii' className={sty.input}  onChange={handleChange} />\r\n        <Button variant='contained' color='primary' onClick={xi}>Upload</Button>\r\n        \r\n        <Typography variant='subtitle1' color='primary' className={sty.inputx}>Provisional Allotment Letter From RC</Typography>\r\n        <TextField type='file'  name='rc' onChange={handleChange} className={sty.input} />\r\n        <Button variant='contained' color='primary' onClick={rc}>Upload</Button>\r\n         \r\n        <Typography variant='subtitle1' color='primary' className={sty.inputx}>Identity Proof</Typography>\r\n        <TextField type='file'  name='id' className={sty.input}  onChange={handleChange} />\r\n        <Button variant='contained' color='primary' onClick={id}>Upload</Button>\r\n\r\n        <Typography variant='subtitle1' className={sty.inputx}>Cast Certificate (if applicable)</Typography>\r\n        <TextField type='file'  name='cast' className={sty.input}  />\r\n        <Button variant='contained' color='primary' onClick={caste}>Upload</Button>\r\n        \r\n        <Typography variant='subtitle1' className={sty.inputx}>Disability Certificate (if applicable)</Typography>\r\n        <TextField type='file'  name='pwd' className={sty.input}  />\r\n        <Button variant='contained' color='primary' onClick={pwd}>Upload</Button>\r\n        \r\n        <Typography variant='subtitle1' className={sty.inputx}>Income Proof (if applicable)</Typography>\r\n        <TextField type='file'  name='income' className={sty.input}  />\r\n        <Button variant='contained' color='primary' onClick={income}>Upload</Button>\r\n       \r\n      </Paper>\r\n    </Grid>\r\n  </>);\r\n}\r\n","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { Grid, Typography, Paper,  TextField,  Divider, Button } from '@material-ui/core'; \r\nimport { url } from './config/config';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        padding: ' 12px 50px',\r\n        // lineHeight:1\r\n        backgroundColor: '#eee',\r\n        [theme.breakpoints.down('sm')]: {\r\n            // width: 'inherit',\r\n            padding: 3\r\n            // overflowX:'auto'\r\n        }\r\n    },\r\n    paper: {\r\n        padding: 15,\r\n        marginBottom: 12,\r\n        // margin:'0 12%',\r\n        minWidth: '50%',\r\n        [theme.breakpoints.down('xs')]: {\r\n            width: 'inherit',\r\n            padding: '12px 3px'\r\n            // overflowX:'auto'\r\n        }\r\n\r\n    },\r\n    banner: {\r\n        backgroundImage: \"url(\" + require('./banner.jpg') + \")\",\r\n        width: '100%',\r\n        height: '267px',\r\n        backgroundPositionX: 'right',\r\n        backgroundPositionY: 'bottom',\r\n\r\n        background: 'center',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundSize: 'cover',\r\n        [theme.breakpoints.down('xs')]: {\r\n            height: '155px',\r\n        }\r\n    },\r\n    detail: {\r\n        margin: 12, lineHeight: 3,\r\n        [theme.breakpoints.down('xs')]: {\r\n            margin: 0\r\n        }\r\n    },\r\n    c: {\r\n        marginTop: 18,\r\n        [theme.breakpoints.down('xs')]: {\r\n            justifyContent: 'left',\r\n            paddingLeft: 12\r\n        }\r\n    }\r\n}));\r\n\r\nexport default function Pay(props) {\r\n    const sty = useStyles();\r\n    const [state, setState] = useState({})\r\n    const handleChange = (e) => {\r\n        setState({ ...state, [e.target.name]: e.target.value })\r\n    }\r\n    const submit = (e) => {\r\n        e.preventDefault()\r\n        fetch(`${url}/api/student/${props.id}/transactionId`, {\r\n            method: 'POST',\r\n            credentials: 'include',\r\n            headers: { 'Content-type': 'Application/json' },\r\n            body: JSON.stringify(state)\r\n        }).then(res => {\r\n            res.json().then(resp => {\r\n                console.log(resp);\r\n                if (resp.success === true) {\r\n                    toast.success('Success')\r\n                }\r\n                if (resp.error === true) {\r\n                    toast.error(resp.message)\r\n                }\r\n            })\r\n        }\r\n        ).catch(r => console.log(r))\r\n    }\r\n\r\n   \r\n        return (<div style={{ minHeight: 'calc(100vh - 64px)'}}>\r\n        <div className={sty.banner} />\r\n        <Grid container justify='center' className={sty.root}>\r\n            <Paper className={sty.paper}>\r\n                <Typography variant='h5'>Application No : {props.id}</Typography>\r\n                <Typography variant='caption' color='error'>Please, deposit application fee to the bank and then update your Payment Status for payment verification.<br /> After verification \"Application Form Print\" option will be activated.</Typography>\r\n                <Divider />\r\n                <Grid container justify='center' className={sty.c}>\r\n\r\n                    <div className={sty.detail} >\r\n                        {/* <p>Registration No\t:\t<b>R200531100951</b></p> */}\r\n                        {/* <p>\tRegistration Date\t:\t<b>31-05-2020</b></p> */}\r\n                        <p>Course\t:\t<b>B-Tech/M-Tech</b></p>\r\n                        <p>Bank\t:\t<b>STATE BANK OF INDIA</b></p>\r\n                        <p>Branch Name\t:\t<b>Beleghata</b></p>\r\n                        <p>Branch Code\t\t:\t<b>001798</b></p>\r\n                    </div>\r\n                    <form onSubmit={submit}>\r\n                        <div className={sty.detail}>\r\n                            {/* <p>Applicant Name\t:\t<b>DIPANJAN  PANJA</b></p> */}\r\n                            {/* <p>Total Fees\t:<b>15201.00</b></p> */}\r\n                            <p>A/c No\t:\t<b>30089300316</b></p>\r\n                            <p>Payment Date :<TextField required type='date' name='transactionDate' onChange={handleChange} /></p>\r\n                            <p>Transaction ID :<TextField required type='number' name='transactionId' onChange={handleChange} /></p>\r\n                            <Button color='primary' type='submit' variant='contained'>submit</Button>\r\n                        </div>\r\n                    </form>\r\n                </Grid>\r\n            </Paper>\r\n        </Grid>\r\n    </div>);\r\n}\r\n","export const AUTH = 'AUTH' \r\n\r\nexport const LOGIN = 'LOGIN' \r\n\r\nexport const ACTIVATE = 'ACTIVATE'\r\nexport const USER = 'USER'\r\n","import React, { useEffect } from 'react';\r\nimport { Card, Grid, CardContent, TextField, Button } from '@material-ui/core';\r\nimport { useState } from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport PropType from 'prop-types'\r\nimport { login } from '../redux/actions/student'\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nfunction Login(props) {\r\n    const history = useHistory()\r\n    const [state, setState] = useState({});\r\n\r\n    useEffect(() => {\r\n        if (props.auth) {\r\n            // setLoading(false)\r\n            if (props.auth=== true) {\r\n                history.push('/dashboard')\r\n            } else if (props.auth) {\r\n                // alert(props.auth.message)\r\n                setState({})\r\n                // toast.error(props.auth.message)\r\n                console.log(props.auth);\r\n\r\n            }\r\n        }\r\n    }, [history, props])\r\n\r\n    const handelChange = (e) => {\r\n        setState({ ...state, [e.target.id]: e.target.value })\r\n    }\r\n    const submit = (e) => {\r\n        e.preventDefault()\r\n        console.log(state);\r\n        props.login(state)\r\n        // setLoading(true)\r\n    }\r\n    return (\r\n        <Grid container justify='center' alignItems='center' style={{ height: 600 }}>\r\n            <Card>\r\n                <CardContent style={{ padding: '20px 10%', textAlign: 'center' }}>\r\n                    <form onSubmit={submit} style={{ maxWidth: 300, }}>\r\n                        <TextField label='User ID'\r\n                            id='id'\r\n                            onChange={handelChange}\r\n                            fullWidth />\r\n                        <TextField label='Password'\r\n                            id='pass'\r\n                            onChange={handelChange}\r\n                            fullWidth />\r\n                        <Button type='submit' variant='contained' color='primary' style={{ margin: '20px 0' }}>Login</Button>\r\n                    </form>\r\n                </CardContent>\r\n            </Card>\r\n        </Grid>\r\n\r\n    );\r\n}\r\nLogin.prototype = {\r\n    auth: PropType.object.isRequired,\r\n    login: PropType.func.isRequired\r\n}\r\nconst mapToProp = {\r\n    login\r\n}\r\nconst mapToState = (state) => ({\r\n    auth: state.admin.login\r\n})\r\nexport default connect(mapToState, mapToProp)(Login); \r\n","import { url } from '../../config/config'\r\nimport { LOGIN, AUTH, ACTIVATE,USER } from '../type'\r\nimport { toast } from 'react-toastify'\r\n\r\nexport const login = (data) => (dispatch) => {\r\n\r\n    fetch(`${url}/api/auth/login`, {\r\n        method: 'POST', \r\n        credentials: 'include',\r\n        headers: { 'Content-type': 'Application/json' },\r\n        body: JSON.stringify(data)\r\n    }).then(res => {\r\n        res.json().then(d => {\r\n            console.log(d);\r\n            /////////////////////////////////////////////////////////////////\r\n            if(d.success===true){\r\n            dispatch({\r\n                type: AUTH,\r\n                payload: true\r\n            })}\r\n            dispatch({\r\n                type: LOGIN,\r\n                payload: d\r\n            })\r\n\r\n        })\r\n    }).catch(r => {\r\n        console.log(r);\r\n        toast.error('Something went wrong ! Try again')\r\n    })\r\n}\r\n\r\nexport const signUp = (data) => (dispatch) => {\r\n    // console.log(data);\r\n\r\n    fetch(`${url}/api/signup`, {\r\n        method: 'POST',\r\n        credentials: 'include',\r\n        headers: { 'Content-type': 'Application/json' },\r\n        body: JSON.stringify(data)\r\n    }).then(res => {\r\n        res.json().then(d => {\r\n            // console.log(d);\r\n            if(d.success===true){\r\n                dispatch({\r\n                    type: AUTH,\r\n                    payload: true\r\n                })}\r\n            dispatch({\r\n                type: LOGIN,\r\n                payload: d\r\n            })\r\n\r\n        })\r\n    }).catch(r => {\r\n        console.log(r);\r\n        toast.error('Something went wrong ! Try again')\r\n\r\n    })\r\n}\r\nexport const activate = (data) => (dispatch) => {\r\n\r\n    fetch(`${url}/activate`, {\r\n        method: 'POST',\r\n        credentials: 'include',\r\n        headers: {\r\n            'Content-Type': 'Application/json',\r\n        },\r\n        body: JSON.stringify(data)\r\n    }).then(res => {\r\n        res.json().then(d => {\r\n            // console.log(d);\r\n            if (d.success === true) {\r\n                window.location = '/home'\r\n            } else if (d.error) {\r\n                dispatch({\r\n                    type: ACTIVATE,\r\n                    payload: d\r\n                })\r\n            }\r\n        })\r\n    }).catch(r => {\r\n        console.log(r);\r\n        toast.error('Something went wrong ! Try again')\r\n    })\r\n}\r\nexport const checkUser = () => (dispatch) => {\r\n    fetch(`${url}/api/auth/checkStudent`, {\r\n        method: 'GET',\r\n        credentials: 'include',\r\n    }).then(res => {\r\n        res.json().then(d => {\r\n            console.log(d);\r\n            if (d.success === true) {\r\n                dispatch({\r\n                    type: AUTH,\r\n                    payload: true\r\n                })\r\n                dispatch({\r\n                    type: USER,\r\n                    payload: d\r\n                })\r\n\r\n            } else if (d.error === true) {\r\n                console.log(d); \r\n                dispatch({\r\n                    type: AUTH,\r\n                    payload: false\r\n                })\r\n\r\n            }\r\n        }).catch(r => {\r\n            console.log(r);\r\n            // console.log('Something went wrong ! Try again')\r\n        })\r\n    })\r\n}\r\nexport const logout = () => (dispatch) => {\r\n    fetch(`${url}/api/auth/logout`, {\r\n        method: 'DELETE',\r\n        credentials: 'include',\r\n    }).then(res => {\r\n        res.json().then(d => {\r\n            // console.log(d);\r\n            if(d.success===true){\r\n\r\n                dispatch({ \r\n                    type: AUTH,\r\n                    payload: false\r\n                })\r\n                window.location = '/login'\r\n            }\r\n        }).catch(r => console.log(r))\r\n    })\r\n}","import React from 'react'\r\nimport {Grid} from '@material-ui/core'\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst Loading = () => {\r\n    const style={style:{height:'70vh'}}\r\n    return (\r\n        <Grid container justify='center' alignItems='center' {...style} > <CircularProgress /></Grid>\r\n    )\r\n}\r\nexport default Loading","import React, { useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch, Redirect, } from 'react-router-dom'\n\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport Form from './form/Form'\nimport Form2 from './form/Form4'\nimport Agreement from './agrement'\nimport Dashboard from './complete'\nimport AppBar from './app bar/AppBar'\nimport DD from './upload'\nimport Pay from './pay'\nimport Login from './auth/login'\nimport Loading from './component/loading'\n\n// import Test from './main'\n\nimport { connect } from 'react-redux';\nimport { checkUser, logout } from './redux/actions/student'\nimport PropType from 'prop-types'\nimport { Typography, Link, Divider, Tooltip } from '@material-ui/core';\n\nfunction App(props) {\n  useEffect(() => {\n    props.checkUser()\n    console.log(\"tiger\");\n  }, [])\n\n  const out = () => {\n    console.log(\"auth\");\n    props.logout();\n  }\n  console.log(props.auth)\n  console.log(props.user)\n  return (\n    <>\n      <Router>\n        <AppBar auth={props.auth} out={out} />\n        <Switch>\n          {/* <Route exact path='/' component={Form2}/> */}\n          <Route exact path='/' component={Agreement} />\n          <Route exact path='/login' render={() => (props.auth === null ? <Loading /> : props.auth === false ? <Login /> : <Redirect to='/dashboard' />)} />\n          <Route exact path='/form' render={() => (props.auth === null ? <Loading /> : <Form auth={props.auth} />)} />\n          <Route exact path='/upload' render={() => (props.auth === null ? <Loading /> : props.auth === true ? <DD id={props.user ? props.user.applicantId : ''} /> : <Redirect to='/login' />)} />\n          <Route exact path='/pay' render={() => (props.auth === null ? <Loading /> : props.auth === true ? <Pay id={props.user ? props.user.applicantId : ''} /> : <Redirect to='/login' />)} />\n\n          {/* <Route exact path='/dashboard' component={Menu}/> */}\n          <Route exact path=\"/dashboard\" render={() => (props.auth === null ? <Loading /> : props.auth === true ? <Dashboard id={props.user ? props.user.applicantId : ''} /> : <Redirect to='/login' />)} />\n\n        </Switch>\n      </Router>\n\n      <ToastContainer />\n      <div style={{\n        position: \"fixed\",\n        bottom: 0,\n        left: 2\n      }}>\n        <Divider />\n        <Typography variant=\"body2\" color=\"textSecondary\" style={{\n          fontSize: 'small',\n          fontFamily: 'monospace'\n        }}>\n          {'  Made with 😊 by '}\n  <Tooltip arrow title=\"Hello, I'm Dipanjan Panja from 2017-21,CSE Batch 😊\">\n          <Link color='textPrimary' href=\"https://facebook.com/dipanjanpanja6\">\n            Dipanjan Panja\n  </Link></Tooltip>{' & '}\n  <Tooltip arrow title=\"Greetings from Aditya!\">\n  <Link color='textPrimary' href=\"https://github.com/Adityashaw\">\n            Aditya Shaw. \n\n  </Link></Tooltip>\n          {' © '}\n          {new Date().getFullYear()}{' '}\n          <Link color='textPrimary' href=\"https://gcect.ac.in\">\n            GCECT\n\n  </Link>\n          {'. All rights reserved.'}\n        </Typography>\n      </div>\n    </>\n\n  );\n}\n\nApp.prototype = {\n  auth: PropType.bool.isRequired,\n  user: PropType.string.isRequired,\n  checkUser: PropType.func.isRequired,\n  logout: PropType.func.isRequired,\n}\nconst mapToProp = {\n  logout, checkUser\n}\nconst mapToState = (state) => ({\n  auth: state.admin.auth,\n  user: state.admin.user,\n})\nexport default connect(mapToState, mapToProp)(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {LOGIN, ACTIVATE, AUTH,USER,} from '../type'\r\n\r\nconst initialState = {\r\n    login: {}, \r\n    activate:'',\r\n    auth:null, \r\n    user:'',\r\n\r\n\r\n}\r\n\r\nexport default function (state = initialState, actions) {\r\n    switch (actions.type) {\r\n\r\n      \r\n        case USER:\r\n            return {\r\n                ...state,\r\n                user: actions.payload\r\n            }\r\n        case AUTH:\r\n            return {\r\n                ...state,\r\n                auth: actions.payload\r\n            }\r\n      \r\n        case LOGIN:\r\n            return {\r\n                ...state,\r\n                login: actions.payload\r\n            }\r\n        case ACTIVATE:\r\n            return {\r\n                ...state,\r\n                activate: actions.payload\r\n            }\r\n\r\n\r\n        default:\r\n            return state\r\n\r\n    }\r\n}","import { createStore, combineReducers, applyMiddleware,  } from 'redux';\r\n\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk'\r\nimport admin from './reduser/admin'\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst reducers = combineReducers({\r\n    admin:admin\r\n})\r\n\r\nconst store = createStore(reducers, initialState, composeWithDevTools(applyMiddleware(...middleware)));\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './redux/store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n  ,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n","\r\n// exports.url = \"http://localhost:5000\" /\r\nexports.url = \"https://gcect.herokuapp.com\"\r\n","module.exports = __webpack_public_path__ + \"static/media/banner.c4fe9315.jpg\";"],"sourceRoot":""}