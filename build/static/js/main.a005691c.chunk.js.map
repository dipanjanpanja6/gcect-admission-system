{"version":3,"sources":["component/static/banner.webp","config/config.js","form/Form3.jsx","redux/actions/student.js","redux/type.js","form/Form4.jsx","form/Form.jsx","agrement.jsx","complete.jsx","app bar/AppBar.jsx","upload.jsx","pay.js","component/background.js","auth/login.jsx","component/loading.jsx","component/Error.jsx","App.js","serviceWorker.js","redux/reduser/admin.js","redux/store.js","index.js"],"names":["module","exports","url","useStyles","makeStyles","theme","root","padding","backgroundColor","palette","background","default","breakpoints","down","paper","marginBottom","width","textField","margin","spacing","heading","marginTop","divider","selectLang","noLang","FormMain3","props","sty","useEffect","window","scrollTo","React","useState","loading","setLoading","blood","Religion","Yup","ref","msg","test","name","exclusive","message","params","reference","path","value","this","resolve","schema","shape","fatherName","required","fatherKaj","motherName","motherKaj","guardianName","guardianRelation","guardianNo","length","x","MIncome","gender","maritalStatus","religion","nationality","initialValues","pwd","AddressP","PSP","pinP","cityP","stateP","countryP","AddressX","PSPX","pinPX","cityPX","statePX","countryPX","onSubmit","values","setSubmitting","PA","address","policeStation","pin","city","state","country","presentAddress","permanentAddress","data","permanentAddressSame","father","occupation","mother","guardian","mobile","relation","familyIncome","console","log","fetch","id","method","credentials","headers","body","JSON","stringify","then","res","json","d","success","localStorage","setItem","alert","catch","r","validationSchema","touched","errors","Typography","variant","select","className","as","TextField","label","error","helperText","MenuItem","map","p","key","Divider","type","InputProps","startAdornment","InputAdornment","position","fullWidth","style","display","alignItems","Fab","disabled","color","CircularProgress","propType","PropType","array","isRequired","string","checkUser","dispatch","payload","Form4","history","useHistory","sigData","picData","setState","handleChange","e","target","files","file","size","reader","FileReader","onloadend","pic","result","sig","readAsDataURL","flexDirection","paddingLeft","src","alt","height","border","inputProps","accept","onChange","onClick","resp","removeItem","push","func","mapToProp","connect","auth","admin","paddingRight","marginLeft","marginRight","backgroundImage","require","backgroundPositionX","backgroundPositionY","backgroundRepeat","backgroundSize","FormMain","location","next","setNext","setId","agree","getItem","b_tech","m_tech","applicantName","applicantName2","applicantName3","studentMobileNo","matches","dob","medium","caste","email","rollNo12th","max","registrationNo12th","board12th","passYear12th","min","Date","getFullYear","schName12th","rollNo10th","registrationNo10th","board10th","passYear10th","schName10th","percent10th","positive","IdNo","idType","marksPassLastExam","yearPassLastExam","boardLastExam","nameLastExam","rollNoEE","rankEE","entranceType","passYearEE","xd","Grid","container","justify","item","Paper","elevation","castes","applicantType","courseType","stream","lateral","firstName","middleName","lastName","category","idNo","course","XII","roll","registration","board","year","school","X","marks","entranceExam","rank","lastExam","applicantId","handleBlur","onBlur","Checkbox","placeholder","InputLabelProps","shrink","defaultValue","useStyle","banner","Test","setAgree","textAlign","align","gutterBottom","rel","href","paddingBottom","toast","warn","FileDownload","rootMain","minHeight","minWidth","Dashboard","loadingA","setLoadingA","loadingC","setLoadingC","List","ListItem","status","blob","response","statusText","err","button","ListItemText","primary","ListItemSecondaryAction","flexGrow","menuButton","grow","title","fontSize","Appbar","classes","AppBar","Toolbar","Link","to","underline","component","RouterLink","noWrap","Button","out","bool","inputx","input","Upload","detail","lineHeight","c","justifyContent","Pay","preventDefault","bg","Component","withStyles","left","top","zIndex","Login","handelChange","Card","CardContent","login","maxWidth","pass","prototype","object","styles","Loading","Error","startDelay","speed","loop","Backspace","count","App","prefersDarkMode","useMediaQuery","useMemo","createMuiTheme","ThemeProvider","logout","exact","Agreement","render","Form","user","bottom","fontFamily","Tooltip","arrow","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","initialState","middleware","thunk","reducers","combineReducers","actions","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","document","getElementById","URL","process","origin","addEventListener","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.a005691c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/banner.8ebbddef.webp\";","\r\n// exports.url = \"http://localhost:5000\" /\r\nexports.url = \"https://gcect.herokuapp.com\"\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { TextField, MenuItem, Typography, Divider, Fab, InputAdornment, CircularProgress, } from '@material-ui/core';\r\nimport { Form, Field, Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useHistory } from 'react-router-dom';\r\nimport PropType from 'prop-types'\r\nimport Axios from 'axios';\r\nimport { url } from '../config/config';\r\nimport { useEffect } from 'react';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        padding: 50,\r\n        // lineHeight:1\r\n        backgroundColor: theme.palette.background.default,\r\n        [theme.breakpoints.down('sm')]: {\r\n            // width: 'inherit',\r\n            padding: 3\r\n            // overflowX:'auto'\r\n        }\r\n    },\r\n    paper: {\r\n        padding: 15,\r\n        marginBottom: 12,\r\n        [theme.breakpoints.down('sm')]: {\r\n            width: 'inherit',\r\n            padding: 0\r\n            // overflowX:'auto'\r\n        }\r\n\r\n    },\r\n    textField: {\r\n        margin: theme.spacing(1),\r\n        // marginRight: theme.spacing(1),\r\n        width: '25ch',\r\n    },\r\n    heading: {\r\n        marginTop: 50,\r\n        marginBottom: 50\r\n    },\r\n    divider: {\r\n        margin: '12px 0'\r\n    },\r\n    selectLang: {\r\n        margin: theme.spacing(1),\r\n        width: '20ch',\r\n    },\r\n    noLang: {\r\n        margin: theme.spacing(1),\r\n        width: '20ch',\r\n    }\r\n}));\r\n\r\n\r\n\r\nfunction FormMain3(props) {\r\n    const sty = useStyles();\r\n    useEffect(()=>{\r\n        window.scrollTo(0, 0)\r\n    },[])\r\n    const [loading, setLoading] = React.useState(false)\r\n\r\n    const blood = [\r\n        'A-', 'A+', 'B-', 'B+', 'AB-', 'AB+', 'O-', 'O+', 'Unknown'\r\n    ]\r\n    const Religion = [\r\n        'Hinduism',\r\n        'Islam',\r\n        'Christianity',\r\n        'Sikhism',\r\n        'Buddhism',\r\n        'Jainism',\r\n        'Unaffiliated',\r\n        'Others',\r\n    ]\r\n    function isSubject(ref, msg) {\r\n        return Yup.mixed().test({\r\n            name: 'isSubject',\r\n            exclusive: false,\r\n            message: msg || 'require b',\r\n            params: {\r\n                reference: ref.path,\r\n            },\r\n            test: function (value) {\r\n                return this.resolve(ref) ? value ? true : false : true\r\n            },\r\n        });\r\n    }\r\n    Yup.addMethod(Yup.number, 'isSubject', isSubject);\r\n    const schema = Yup.object().shape({\r\n        fatherName: Yup.string().required('Required'),\r\n        fatherKaj: Yup.string().required('Required'),\r\n        motherName: Yup.string().required('Required'),\r\n        motherKaj: Yup.string().required('Required'),\r\n        guardianName: Yup.string().required('Required'),\r\n        guardianRelation: Yup.string().required('Required'),\r\n        guardianNo: Yup.string().length(10, 'Invalid').required('Required'),\r\n        x: Yup.boolean(),\r\n        MIncome: Yup.number().required('Required'),\r\n        gender: Yup.string().required('Required'),\r\n        maritalStatus: Yup.string().required('Required'),\r\n        blood: Yup.string().required('Required'),\r\n        religion: Yup.string().required('Required'),\r\n        nationality: Yup.string().required('Required'),\r\n    })\r\n\r\n    return (\r\n\r\n        <Formik\r\n            initialValues={{\r\n                gender: 'Male',\r\n                maritalStatus: 'Single',\r\n                blood: '',\r\n                religion: '',\r\n                nationality: \"Indian\",\r\n                pwd: 'No',\r\n                x: true,\r\n                fatherName: \"\",\r\n                fatherKaj: \"\",\r\n                motherName: \"\",\r\n                motherKaj: \"\",\r\n                guardianName: \"\",\r\n                guardianRelation: \"\",\r\n                guardianNo: \"\",\r\n                MIncome: \"\",\r\n                AddressP: \"\",\r\n                PSP: \"\",\r\n                pinP: \"\",\r\n                cityP: \"\",\r\n                stateP: '',\r\n                countryP: 'India',\r\n                AddressX: \"\",\r\n                PSPX: \"\",\r\n                pinPX: \"\",\r\n                cityPX: \"\",\r\n                statePX: '',\r\n                countryPX: '',\r\n\r\n\r\n\r\n            }}\r\n\r\n            onSubmit={(values, { setSubmitting }) => {\r\n                setSubmitting(true);\r\n                setLoading(true)\r\n                const PA = {\r\n                    address: values.AddressX,\r\n                    policeStation: values.PSPX,\r\n                    pin: values.pinPX,\r\n                    city: values.cityPX,\r\n                    state: values.statePX,\r\n                    country: values.countryPX,\r\n                }\r\n                const presentAddress = {\r\n                    address: values.AddressP,\r\n                    policeStation: values.PSP,\r\n                    pin: values.pinP,\r\n                    city: values.cityP,\r\n                    state: values.stateP,\r\n                    country: values.countryP,\r\n                }\r\n                const permanentAddress = values.x ? presentAddress : PA\r\n\r\n                const data = {\r\n                    gender: values.gender,\r\n                    maritalStatus: values.maritalStatus,\r\n                    blood: values.blood,\r\n                    religion: values.religion,\r\n                    nationality: values.nationality,\r\n                    pwd: values.pwd,\r\n                    permanentAddressSame: values.x,\r\n\r\n                    father: {\r\n                        name: values.fatherName,\r\n                        occupation: values.fatherKaj,\r\n                    },\r\n                    mother: {\r\n                        name: values.motherName,\r\n                        occupation: values.motherKaj,\r\n                    },\r\n                    guardian: {\r\n                        name: values.guardianName,\r\n                        mobile: values.guardianNo,\r\n                        relation: values.guardianRelation,\r\n                    },\r\n                    familyIncome: values.MIncome,\r\n                    presentAddress,\r\n                    permanentAddress\r\n                }\r\n\r\n                console.log(data);\r\n\r\n                fetch(`${url}/api/student/${props.id}/family`, {\r\n                    method: 'POST',\r\n                    credentials: 'include',\r\n                    headers: { 'Content-type': 'Application/json' },\r\n                    body: JSON.stringify(data)\r\n                }).then(res => {\r\n                    res.json().then(d => {\r\n                        setLoading(false)\r\n                        console.log(d);\r\n                        if (d.success === true) {\r\n                            setSubmitting(false);\r\n                            localStorage.setItem('step', 3)\r\n                            props.success(3);\r\n                        }else{\r\n                            setSubmitting(false);\r\n                            alert(JSON.stringify(d.message, null, 2)); \r\n                        }\r\n                    })\r\n                }).catch(r => {\r\n                    setLoading(false)\r\n                    console.log(r)\r\n                })\r\n\r\n            }}\r\n\r\n            validationSchema={schema}\r\n        >\r\n            {(props) => {\r\n                const {\r\n                    values,\r\n                    touched,\r\n                    errors,\r\n                } = props;\r\n                return (\r\n\r\n                    <Form>\r\n                        <Typography variant='h6'>Personal Details</Typography>\r\n                        <div>\r\n                            <Field\r\n                                name=\"gender\"\r\n                                required\r\n                                select\r\n                                className={sty.textField}\r\n                                as={TextField}\r\n                                label=\"Select Gender\"\r\n                                error={errors.gender && touched.gender}\r\n                                helperText={(errors.gender && touched.gender) && errors.gender}\r\n                            >\r\n                                <MenuItem value='Male'>\r\n                                    Male\r\n                                </MenuItem>\r\n                                <MenuItem value='Female'>\r\n                                    Female\r\n                                </MenuItem>\r\n                                <MenuItem value='TG'>\r\n                                    TG\r\n                                </MenuItem>\r\n                            </Field>\r\n                            <Field\r\n                                name=\"maritalStatus\"\r\n                                select\r\n                                className={sty.textField}\r\n                                error={errors.maritalStatus && touched.maritalStatus}\r\n                                helperText={(errors.maritalStatus && touched.maritalStatus) && errors.maritalStatus}\r\n                                as={TextField}\r\n                                label=\"Select Marital Status\"\r\n                            >\r\n                                <MenuItem value='Single'>\r\n                                    Single\r\n                            </MenuItem>\r\n                                <MenuItem value='Married'>\r\n                                    Married\r\n                            </MenuItem>\r\n\r\n\r\n                            </Field>\r\n                            <Field\r\n                                name=\"blood\"\r\n                                select\r\n                                className={sty.textField}\r\n                                error={errors.blood && touched.blood}\r\n                                helperText={(errors.blood && touched.blood) && errors.blood}\r\n                                as={TextField}\r\n                                label=\"Select Blood Group\"\r\n                            >\r\n                                {blood.map(p => {\r\n                                    return (<MenuItem key={p} value={p}>\r\n                                        {p}\r\n                                    </MenuItem>)\r\n                                })}\r\n                            </Field>\r\n                            <Field\r\n                                name=\"religion\"\r\n                                select\r\n                                className={sty.textField}\r\n                                error={errors.religion && touched.religion}\r\n                                helperText={(errors.religion && touched.religion) && errors.religion}\r\n                                as={TextField}\r\n                                label=\"Select Religion\"\r\n                            >\r\n                                {Religion.map(p => {\r\n                                    return (<MenuItem key={p} value={p}>\r\n                                        {p}\r\n                                    </MenuItem>)\r\n                                })}\r\n                            </Field>\r\n                            <Field\r\n                                name=\"nationality\"\r\n                                className={sty.textField}\r\n                                error={errors.nationality && touched.nationality}\r\n                                helperText={(errors.nationality && touched.nationality) && errors.nationality}\r\n                                as={TextField}\r\n                                label=\"Nationality\"\r\n                            />\r\n                            <Field\r\n                                name=\"pwd\"\r\n                                className={sty.textField}\r\n                                required\r\n\r\n                                select\r\n                                as={TextField}\r\n                                label=\"Physically Challenged? (Handicapped)\"\r\n                            >\r\n                                <MenuItem value='No'>No</MenuItem>\r\n                                <MenuItem value='Yes'>Yes</MenuItem>\r\n                            </Field>\r\n\r\n                        </div>\r\n                        <Divider className={sty.divider} />\r\n                        <Typography variant='subtitle1'>Guardian Details</Typography>\r\n                        <div>\r\n                            <Field\r\n                                name=\"fatherName\"\r\n                                label=\"Applicant Father Name\"\r\n                                className={sty.textField}\r\n                                // placeholder=\"First Name\"\r\n                                error={errors.fatherName && touched.fatherName}\r\n                                helperText={(errors.fatherName && touched.fatherName) && errors.fatherName}\r\n                                as={TextField}\r\n\r\n                            />\r\n                            <Field\r\n                                name=\"fatherKaj\"\r\n                                label=\"Applicant Father Occupation\"\r\n                                className={sty.textField}\r\n                                // placeholder=\"First Name\"\r\n                                error={errors.fatherKaj && touched.fatherKaj}\r\n                                helperText={(errors.fatherKaj && touched.fatherKaj) && errors.fatherName}\r\n                                as={TextField}\r\n\r\n                            />\r\n                            <Field\r\n                                name=\"motherName\"\r\n                                label=\"Applicant Mother Name\"\r\n                                className={sty.textField}\r\n                                // placeholder=\"First Name\"\r\n                                error={errors.motherName && touched.motherName}\r\n                                helperText={(errors.motherName && touched.motherName) && errors.motherName}\r\n                                as={TextField}\r\n\r\n                            />\r\n                            <Field\r\n                                name=\"motherKaj\"\r\n                                label=\"Applicant Mother Occupation\"\r\n                                className={sty.textField}\r\n                                // placeholder=\"First Name\"\r\n                                error={errors.motherKaj && touched.motherKaj}\r\n                                helperText={(errors.motherKaj && touched.motherKaj) && errors.motherKaj}\r\n                                as={TextField}\r\n\r\n                            />\r\n                            <Field\r\n                                name=\"guardianName\"\r\n                                label=\"Applicant Guardian's Name\"\r\n                                className={sty.textField}\r\n                                error={errors.guardianName && touched.guardianName}\r\n                                helperText={(errors.guardianName && touched.guardianName) && errors.guardianName}\r\n                                as={TextField}\r\n                            />\r\n                            <Field\r\n                                name=\"guardianRelation\"\r\n                                label=\"Applicant Guardian's Relation\"\r\n                                className={sty.textField}\r\n                                error={errors.guardianRelation && touched.guardianRelation}\r\n                                helperText={(errors.guardianRelation && touched.guardianRelation) && errors.guardianRelation}\r\n                                as={TextField}\r\n                            />\r\n\r\n                            <Field\r\n                                label=\"Guardian's Mobile No\"\r\n                                name=\"guardianNo\"\r\n                                type='number'\r\n                                InputProps={{\r\n                                    startAdornment: (\r\n                                        <InputAdornment position=\"start\">\r\n                                            +91\r\n                                        </InputAdornment>\r\n                                    )\r\n                                }}\r\n                                className={sty.textField}\r\n                                margin=\"dense\"\r\n                                error={errors.guardianNo && touched.guardianNo}\r\n                                helperText={(errors.guardianNo && touched.guardianNo) && errors.guardianNo}\r\n                                as={TextField}\r\n                            />\r\n                            <Field\r\n                                // InputLabelProps={{\r\n                                //     shrink: true,\r\n                                // }}\r\n                                label=\"Monthly Family Income\"\r\n                                name=\"MIncome\"\r\n                                className={sty.textField}\r\n                                type='number'\r\n                                error={errors.MIncome && touched.MIncome}\r\n                                helperText={(errors.MIncome && touched.MIncome) && errors.MIncome}\r\n                                as={TextField}\r\n                            />\r\n\r\n                        </div>\r\n                        <Divider className={sty.divider} />\r\n                        <div>\r\n                            <Typography variant='h6'>Address & Communication</Typography>\r\n                            <Typography variant='subtitle1'>Present Address</Typography>\r\n                            <Field\r\n                                label=\"Address\"\r\n                                name=\"AddressP\"\r\n                                fullWidth\r\n                                required\r\n                                className={sty.textField}\r\n                                error={errors.AddressP && touched.AddressP}\r\n                                helperText={(errors.AddressP && touched.AddressP) && errors.AddressP}\r\n                                as={TextField}\r\n                            />\r\n                            <Field\r\n                                error={errors.PSP && touched.PSP}\r\n                                helperText={(errors.PSP && touched.PSP) && errors.PSP}\r\n                                as={TextField}\r\n                                name=\"PSP\"\r\n                                required\r\n                                label=\"Police Station\"\r\n                                className={sty.textField}\r\n                            />\r\n                            <Field\r\n                                name=\"pinP\"\r\n                                type='number'\r\n                                required\r\n                                label=\"PIN Code\"\r\n                                className={sty.textField}\r\n                                error={errors.pinP && touched.pinP}\r\n                                helperText={(errors.pinP && touched.pinP) && errors.pinP}\r\n                                as={TextField}\r\n                            />\r\n                            <Field\r\n                                name=\"cityP\"\r\n                                label=\"City / District\"\r\n                                className={sty.textField}\r\n                                error={errors.cityP && touched.cityP}\r\n                                helperText={(errors.cityP && touched.cityP) && errors.cityP}\r\n                                as={TextField}\r\n                                required\r\n                            />\r\n                            <Field\r\n                                required\r\n                                error={errors.stateP && touched.stateP}\r\n                                helperText={(errors.stateP && touched.stateP) && errors.stateP}\r\n                                as={TextField}\r\n                                name=\"stateP\"\r\n                                label=\"State\"\r\n                                className={sty.textField}\r\n                            />\r\n                            <Field\r\n                                required\r\n                                error={errors.countryP && touched.countryP}\r\n                                helperText={(errors.countryP && touched.countryP) && errors.countryP}\r\n                                as={TextField}\r\n                                name=\"countryP\"\r\n                                label=\"Country\"\r\n                                className={sty.textField}\r\n                            />\r\n\r\n                        </div>\r\n                        <Divider className={sty.divider} />\r\n                        <div>\r\n                            <Typography variant='subtitle1'> Permanent Address</Typography>\r\n                            <div style={{ display: 'inline-flex', alignItems: 'center' }}><Field type='checkbox' name='x' /><p> Same as above</p></div><br />\r\n                            {!values.x && <>\r\n                                <Field\r\n                                    label=\"Address\"\r\n                                    name=\"AddressX\"\r\n                                    fullWidth\r\n                                    required\r\n                                    className={sty.textField}\r\n                                    as={TextField}\r\n                                />\r\n                                <Field\r\n                                    as={TextField}\r\n                                    name=\"PSPX\"\r\n                                    required\r\n                                    label=\"Police Station\"\r\n                                    className={sty.textField}\r\n                                />\r\n                                <Field\r\n                                    name=\"pinPX\"\r\n                                    type='number'\r\n                                    required\r\n                                    label=\"PIN Code\"\r\n                                    className={sty.textField}\r\n                                    as={TextField}\r\n                                />\r\n                                <Field\r\n                                    name=\"cityPX\"\r\n                                    required\r\n                                    label=\"City / District\"\r\n                                    className={sty.textField}\r\n                                    as={TextField}\r\n                                />\r\n                                <Field\r\n                                    as={TextField}\r\n                                    required\r\n                                    name=\"statePX\"\r\n                                    label=\"State\"\r\n                                    className={sty.textField}\r\n                                />\r\n                                <Field\r\n                                    as={TextField}\r\n                                    required\r\n                                    name=\"countryPX\"\r\n                                    label=\"Country\"\r\n                                    className={sty.textField}\r\n                                /></>}\r\n                        </div>\r\n                        <br />\r\n                        <Fab disabled={loading} style={{ margin: '20px 0' }} color=\"primary\" variant='extended' type='submit' >\r\n                        {loading ? <><p>Processing</p><CircularProgress /> </> : 'submit & Next'}\r\n                            </Fab>\r\n                    </Form>)\r\n            }}\r\n        </Formik >\r\n\r\n    )\r\n}\r\nFormMain3.propType = {\r\n    success: PropType.array.isRequired,\r\n    id: PropType.string.isRequired,\r\n\r\n}\r\nexport default FormMain3","import { url } from '../../config/config'\r\nimport { LOGIN, AUTH,  USER } from '../type'\r\nimport { toast } from 'react-toastify'\r\n\r\nexport const login = (data) => (dispatch) => {\r\n\r\n    fetch(`${url}/api/auth/login`, {\r\n        method: 'POST',\r\n        credentials: 'include',\r\n        headers: { 'Content-type': 'Application/json' },\r\n        body: JSON.stringify(data)\r\n    }).then(res => {\r\n        res.json().then(d => {\r\n            // console.log(d);\r\n             if (d.success === true) {\r\n                dispatch({\r\n                    type: AUTH,\r\n                    payload: true\r\n                })\r\n                dispatch({\r\n                    type: USER,\r\n                    payload: d\r\n                })\r\n            } else {\r\n                toast.error(d.message)\r\n                dispatch({\r\n                    type: LOGIN,\r\n                    payload: d\r\n                })\r\n            }\r\n\r\n        })\r\n    }).catch(r => {\r\n        console.log(r);\r\n        toast.error('Something went wrong ! Try again')\r\n    })\r\n}\r\n// 9831649012\r\nexport const checkUser = () => (dispatch) => {\r\n    fetch(`${url}/api/auth/checkStudent`, {\r\n        method: 'GET',\r\n        credentials: 'include',\r\n    }).then(res => {\r\n        res.json().then(d => {\r\n            // console.log(d);\r\n            if (d.success === true) {\r\n                dispatch({\r\n                    type: AUTH,\r\n                    payload: true\r\n                })\r\n                dispatch({\r\n                    type: USER,\r\n                    payload: d\r\n                })\r\n\r\n            } else if (d.error === true) {\r\n                console.log(d);\r\n                dispatch({\r\n                    type: AUTH,\r\n                    payload: false\r\n                })\r\n\r\n            }\r\n        }).catch(r => {\r\n            console.log(r);\r\n            // console.log('Something went wrong ! Try again')\r\n        })\r\n    })\r\n}\r\nexport const logout = () => (dispatch) => {\r\n    fetch(`${url}/api/auth/logout`, {\r\n        method: 'DELETE',\r\n        credentials: 'include',\r\n    }).then(res => {\r\n        res.json().then(d => {\r\n            // console.log(d);\r\n            if (d.success === true) {\r\n\r\n                dispatch({\r\n                    type: AUTH,\r\n                    payload: false\r\n                })\r\n                window.location = '/login'\r\n            }\r\n        }).catch(r => console.log(r))\r\n    })\r\n}","export const AUTH = 'AUTH' \r\n\r\nexport const LOGIN = 'LOGIN' \r\n \r\nexport const USER = 'USER'\r\n","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { TextField, Typography, Fab, CircularProgress, } from '@material-ui/core';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { url } from '../config/config';\r\nimport PropType from 'prop-types'\r\nimport { useEffect } from 'react';\r\nimport { checkUser } from '../redux/actions/student'\r\nimport { connect } from 'react-redux';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        padding: 50,\r\n        // lineHeight:1\r\n        backgroundColor: theme.palette.background.default,\r\n        [theme.breakpoints.down('sm')]: {\r\n            // width: 'inherit',\r\n            padding: 3\r\n            // overflowX:'auto'\r\n        }\r\n    },\r\n    paper: {\r\n        padding: 15,\r\n        marginBottom: 12,\r\n        [theme.breakpoints.down('sm')]: {\r\n            width: 'inherit',\r\n            padding: 0\r\n            // overflowX:'auto'\r\n        }\r\n\r\n    },\r\n    textField: {\r\n        marginBottom: theme.spacing(5),\r\n        margin: theme.spacing(1),\r\n        width: '30ch',\r\n    },\r\n\r\n}));\r\n\r\n\r\n\r\nfunction Form4(props) {\r\n    const sty = useStyles();\r\n    const history = useHistory()\r\n    const [loading, setLoading] = useState(false);\r\n    console.log(props.id);\r\n    const [state, setState] = React.useState({ sigData: '', picData: '' })\r\n    useEffect(() => {\r\n        props.checkUser()\r\n    }, [])\r\n    const upload = () => {\r\n        setLoading(true)\r\n\r\n        // console.log( { pic: state.pic, sig: state.sig });\r\n        if (state.sigData !== '' && state.picData !== '') {\r\n            // /api/student/<id>/images\r\n            fetch(`${url}/api/student/${props.id}/images`, {\r\n                method: 'POST',\r\n                credentials: 'include',\r\n                headers: { 'Content-type': 'Application/json' },\r\n                body: JSON.stringify({ pic: state.pic, sig: state.sig })\r\n            }).then(res => {\r\n                res.json().then(resp => {\r\n                    setLoading(false)\r\n\r\n                    console.log(resp);\r\n                    if (resp.success === true) {\r\n                        localStorage.removeItem('step')\r\n                        localStorage.removeItem('id')\r\n                        history.push('/dashboard')\r\n                    }\r\n                    if (resp.error === true) {\r\n                        alert(resp.message)\r\n                    }\r\n                })\r\n            }\r\n            ).catch(r => {\r\n                setLoading(false)\r\n                console.log(r)\r\n            })\r\n        } else {\r\n            alert('please select both image first !!!')\r\n        }\r\n\r\n    }\r\n    const handleChange = (e) => {\r\n        if (e.target.files && e.target.files[0]) {\r\n            let file = e.target.files[0];\r\n            if (file.size / 1000 > 100) { return alert('size must not exceed 100kb') } else {\r\n                let reader = new FileReader();\r\n                if (e.target.name === 'picture') {\r\n                    reader.onloadend = () => {\r\n                        setState({\r\n                            ...state,\r\n                            picData: file,\r\n                            pic: reader.result,\r\n                        })\r\n                    }\r\n                }\r\n                if (e.target.name === 'signature') {\r\n                    reader.onloadend = () => {\r\n                        setState({\r\n                            ...state,\r\n                            sigData: file,\r\n                            sig: reader.result,\r\n                        });\r\n                    };\r\n                }\r\n                reader.readAsDataURL(e.target.files[0]);\r\n            }\r\n        }\r\n    }\r\n\r\n    // <Paper className={sty.paper}>\r\n    return (<>\r\n        <Typography variant='h5'>Upload Photo & Signature</Typography><br />\r\n        <div style={{ display: 'flex', flexDirection: 'column', paddingLeft: 16 }}>\r\n            <img src={state.pic} alt=\" \" style={{\r\n                width: '99px',\r\n                height: '105px',\r\n                border: 'solid 1px',\r\n            }} />\r\n            <Typography variant='subtitle1'>Upload Photo</Typography>\r\n            <TextField name='picture' inputProps={{ accept: \"image/*\" }} onChange={handleChange} className={sty.textField} helperText='size must not exceed 100kb' type='file' />\r\n            <img src={state.sig} alt=\"signature\" style={{\r\n                width: '150px',\r\n                height: '67px',\r\n                border: 'solid 1px',\r\n            }} />\r\n            <Typography variant='subtitle1'>Upload Signature</Typography>\r\n            <TextField name='signature' inputProps={{ accept: \"image/*\" }} className={sty.textField} type='file' onChange={handleChange} helperText='size must not exceed 100kb' />\r\n        </div>\r\n        <Fab disabled={loading} style={{ margin: '20px 0' }} color=\"primary\" variant='extended' onClick={upload} >\r\n            {loading ? <><p>Processing</p><CircularProgress /> </> : 'submit & Download Challan'}</Fab>\r\n        {/* // </Paper> */}\r\n    </>\r\n\r\n    )\r\n}\r\nForm4.propType = {\r\n    id: PropType.string.isRequired,\r\n    checkUser: PropType.func.isRequired,\r\n}\r\nconst mapToProp = {\r\n    checkUser\r\n}\r\nconst mapToState = (state) => ({\r\n    auth: state.admin.auth,\r\n})\r\nexport default connect(mapToState, mapToProp)(Form4)","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useHistory } from 'react-router-dom'\r\nimport { TextField, Paper, Grid, MenuItem, Typography, Divider, Fab, InputAdornment, Checkbox, CircularProgress, } from '@material-ui/core';\r\nimport { Form, Field, Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n// import axios from 'axios'\r\n\r\n// import Form1 from './Form2'\r\nimport Form2 from './Form3'\r\nimport Form3 from './Form4'\r\nimport { url } from '../config/config';\r\nimport { useEffect } from 'react'; \r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    root: {\r\n        [theme.breakpoints.down('sm')]: {\r\n            paddingLeft: 3,\r\n            paddingRight: 3,\r\n\r\n        },\r\n        padding: 50,\r\n        backgroundColor: theme.palette.background.default,\r\n        // lineHeight:1\r\n\r\n    },\r\n    paper: {\r\n        // margin: 30,\r\n        width: '100%',\r\n        padding: 15,\r\n        [theme.breakpoints.down('sm')]: {\r\n            width: 'inherit'\r\n            // overflowX:'auto'\r\n        }\r\n\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: '25ch',\r\n    },\r\n    heading: {\r\n        flexDirection: 'column',\r\n        color: '#fff',\r\n        backgroundImage: \"url(\" + require('../component/static/banner.webp') + \")\",\r\n        width: '100%',\r\n        height: '267px',\r\n        backgroundPositionX: 'right',\r\n        backgroundPositionY: 'bottom',\r\n\r\n        background: 'center',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundSize: 'cover',\r\n        [theme.breakpoints.down('xs')]: {\r\n            height: '155px',\r\n\r\n        }\r\n    },\r\n    divider: {\r\n        margin: '12px 0'\r\n    },\r\n    selectLang: {\r\n        margin: theme.spacing(1),\r\n        width: '20ch',\r\n    },\r\n    noLang: {\r\n        margin: theme.spacing(1),\r\n        width: '20ch',\r\n    }\r\n}));\r\n\r\n\r\n\r\nfunction FormMain(props) {\r\n    const history = useHistory()\r\n    const sty = useStyles();\r\n    // console.log(history.location.state.agree);\r\n    console.log(history.location.state);\r\n\r\n    const [next, setNext] = React.useState(0)\r\n    const [loading, setLoading] = React.useState(false)\r\n    const [id, setId] = useState()\r\n    const formS = (p) => { setNext(p) }\r\n    useEffect(() => {\r\n        if (history.location.state) {\r\n            console.log('jj');\r\n            if (!history.location.state.agree) {\r\n                window.location = '/'\r\n            }\r\n        } else {\r\n            window.location = '/'\r\n\r\n        }\r\n        // var step = localStorage.getItem('step')\r\n        if (props.auth) {\r\n            if (localStorage.getItem('id')) {\r\n                setId(localStorage.getItem('id'))\r\n                if (localStorage.getItem('step')) {\r\n                    setNext(localStorage.getItem('step'))\r\n                    console.log(localStorage.getItem('step'));\r\n                    console.log(next);\r\n                }\r\n            } else {\r\n                history.push('/dashboard')\r\n            }\r\n        }\r\n\r\n\r\n    }, [])\r\n    const b_tech = [\r\n        \"CSE\", 'IT', 'CT'\r\n    ]\r\n    const m_tech = [\r\n        'IT', 'CT'\r\n    ]\r\n\r\n    function gaterThan(ref, msg) {\r\n        return Yup.mixed().test({\r\n            name: 'gaterThan',\r\n            exclusive: false,\r\n            message: msg || 'total>?',\r\n            params: {\r\n                reference: ref.path,\r\n            },\r\n            test: function (value) {\r\n                return this.resolve(ref) ? value <= this.resolve(ref) : true\r\n            },\r\n        });\r\n    }\r\n    Yup.addMethod(Yup.string, 'gaterThan', gaterThan);\r\n\r\n    function isSubject(ref, msg) {\r\n        return Yup.mixed().test({\r\n            name: 'isSubject',\r\n            exclusive: false,\r\n            message: msg || 'required',\r\n            params: {\r\n                reference: ref.path,\r\n            },\r\n            test: function (value) {\r\n                return this.resolve(ref) ? value ? true : false : true\r\n            },\r\n        });\r\n    }\r\n    Yup.addMethod(Yup.number, 'isSubject', isSubject);\r\n    const schema = Yup.object().shape({\r\n        applicantName: Yup.string().required('Required'),\r\n        applicantName2: Yup.string(),\r\n        applicantName3: Yup.string().required('Required'),\r\n        studentMobileNo: Yup.string().matches(`^[0-9]{10}$`, \"Incorrect Mobile no.\").required('Required'),\r\n        dob: Yup.date().required('Required'),\r\n        medium: Yup.string().required('Required'),\r\n        caste: Yup.string().required('Required'),\r\n        email: Yup.string().email().required('Required'),\r\n\r\n\r\n        rollNo12th: Yup.string().max(10, \"must be at most 10 digit\").required('Required'),\r\n        registrationNo12th: Yup.string().max(10, \"must be at most 10 digit\").required('Required'),\r\n        board12th: Yup.string().required('Required'),\r\n        passYear12th: Yup.number().min(2000, \"must be greater than or equal to 2000\").max(new Date().getFullYear(), \"must be at earlier than current year\").required('Required'),\r\n        schName12th: Yup.string().required('Required'),\r\n\r\n        rollNo10th: Yup.string().max(10, \"must be at most 10 digit\").required('Required'),\r\n        registrationNo10th: Yup.string().max(10, \"must be at most 10 digit\").required('Required'),\r\n        board10th: Yup.string().required('Required'),\r\n        passYear10th: Yup.number().min(2000, \"must be greater than or equal to 2000\").max(new Date().getFullYear(), \"must be at earlier than current pass year\").required('Required'),\r\n        schName10th: Yup.string().required('Required'),\r\n        percent10th: Yup.number(\"Must be a number\").positive(\"must be a positive number\").max(100).required('Required'),\r\n\r\n        IdNo: Yup.string().matches(`^([0-9]{10})|([A-Z]{5}[0-9]{4}[A-Z]{1})|(([a-zA-Z]){3}([0-9]){7}?)$`, \"Incorrect ID\").required('Required'),\r\n        idType: Yup.string().required('Required'),\r\n\r\n\r\n        marksPassLastExam: Yup.number().max(100, \"must be at most 100%\").required('Required'),\r\n        yearPassLastExam: Yup.number().min(2000, \"must be greater than or equal to 2000\").required('Required'),\r\n        boardLastExam: Yup.string().required('Required'),\r\n        nameLastExam: Yup.string().required('Required'),\r\n\r\n        rollNoEE: Yup.string().min(8, \"must be at least 8 characters\").required('Required'),\r\n        rankEE: Yup.number().required('Required'),\r\n        entranceType: Yup.string().required('Required'),\r\n        passYearEE: Yup.number().min(2000, \"must be greater than or equal to 2000\").max(new Date().getFullYear(), \"must be at earlier than current year\").required('Required'),\r\n\r\n    })\r\n   \r\n    console.log(next);\r\n    var xd = history.location.state ? history.location.state.agree : false\r\n    return (<>\r\n        {\r\n            xd && <>\r\n                <Grid container justify='center' className={sty.heading} item>\r\n                    {/* <Typography variant='h4'>\r\n                        Government College of Engineering And Ceramic Technology\r\n                </Typography> */}\r\n                    {/* <Typography variant='h5'>\r\n                        Online admission form\r\n                </Typography> */}\r\n                </Grid>\r\n                <Grid container justify='center' alignItems='center' className={sty.root}>\r\n\r\n\r\n                    <Paper className={sty.paper} elevation={10} >\r\n                        {next == 0 && <Formik\r\n                            initialValues={{\r\n                                marksPassLastExam: '',\r\n                                yearPassLastExam: '',\r\n                                boardLastExam: \"\",\r\n                                nameLastExam: \"\",\r\n\r\n                                rollNoEE: \"\",\r\n                                rankEE: \"\",\r\n                                passYearEE: \"\",\r\n                                entranceType: 'WBJEE',\r\n\r\n                                rollNo12th: \"\",\r\n                                registrationNo12th: \"\",\r\n                                board12th: \"WEST BENGAL COUNCIL OF HIGHER SECONDARY EDUCATION\",\r\n                                passYear12th: \"\",\r\n                                schName12th: \"\",\r\n\r\n                                rollNo10th: \"\",\r\n                                registrationNo10th: \"\",\r\n                                board10th: \"WEST BENGAL BOARD OF SECONDARY EDUCATION\",\r\n                                passYear10th: \"\",\r\n                                schName10th: \"\",\r\n                                percent10th: '',\r\n\r\n                                idType: \"AADHAAR\",\r\n                                IdNo: \"\",\r\n                                medium: \"Bengali\",\r\n                                dob: \"\",\r\n                                studentMobileNo: \"\",\r\n                                email: \"\",\r\n\r\n                                castes: \"\",\r\n                                caste: \"\",\r\n                                applicantName: \"\",\r\n                                applicantName2: \"\",\r\n                                applicantName3: \"\",\r\n                                applicantType: 'General',\r\n                                courseType: 'B.Tech',\r\n                                stream: '',\r\n                                lateral: false\r\n\r\n\r\n\r\n\r\n                            }}\r\n                            onSubmit={(values, { setSubmitting }) => {\r\n                                setSubmitting(true);\r\n                                setLoading(true)\r\n                                const data = {\r\n                                    applicantType: values.applicantType,\r\n                                    firstName: values.applicantName,\r\n                                    middleName: values.applicantName2,\r\n                                    lastName: values.applicantName3,\r\n                                    caste: values.castes,//\r\n                                    category: values.caste,\r\n                                    mobile: values.studentMobileNo,\r\n                                    email: values.email,\r\n                                    idType: values.idType,\r\n                                    idNo: values.IdNo,\r\n                                    medium: values.medium,\r\n                                    dob: values.dob,\r\n                                    course: values.courseType,\r\n                                    stream: values.stream,\r\n                                    lateral: values.lateral,\r\n                                    XII: {\r\n                                        roll: values.rollNo12th,\r\n                                        registration: values.registrationNo12th,\r\n                                        board: values.board12th,\r\n                                        year: values.passYear12th,\r\n                                        school: values.schName12th,\r\n                                    },\r\n                                    X: {\r\n                                        roll: values.rollNo10th,\r\n                                        registration: values.registrationNo10th,\r\n                                        board: values.board10th,\r\n                                        year: values.passYear10th,\r\n                                        school: values.schName10th,\r\n                                        marks: values.percent10th,\r\n                                    },\r\n                                    entranceExam: {\r\n                                        roll: values.rollNoEE,\r\n                                        rank: values.rankEE,\r\n                                        year: values.passYearEE,\r\n                                        name: values.entranceType,\r\n                                    },\r\n                                    lastExam: {\r\n                                        marks: values.marksPassLastExam,\r\n                                        year: values.yearPassLastExam,\r\n                                        board: values.boardLastExam,\r\n                                        name: values.nameLastExam,\r\n                                    }\r\n\r\n                                }\r\n                                // console.log(data);\r\n                                // console.log(values);\r\n\r\n                                fetch(`${url}/api/student`, {\r\n                                    method: 'POST',\r\n                                    credentials: 'include',\r\n                                    headers: { 'Content-type': 'Application/json' },\r\n                                    body: JSON.stringify(data)\r\n                                }).then(res => {\r\n                                    res.json().then(resp => {\r\n                                        console.log(resp);\r\n                                        setLoading(false)\r\n                                        if (resp.success === true) {\r\n                                            setSubmitting(false);\r\n                                            localStorage.setItem('step', 2)\r\n                                            localStorage.setItem('id', resp.applicantId)\r\n                                            setId(resp.applicantId)\r\n                                            setNext(2);\r\n                                        } else {\r\n                                            setSubmitting(false);\r\n                                            console.log(resp.message);\r\n                                            alert(JSON.stringify(resp.message, null, 2));\r\n                                            // alert(resp.message)\r\n                                        }\r\n                                    })\r\n                                }\r\n                                ).catch(r => {\r\n                                    setLoading(false)\r\n                                    console.log(r)\r\n                                })\r\n                            }\r\n                            }\r\n\r\n                            validationSchema={schema}\r\n                        >\r\n                            {(props) => {\r\n                                const {\r\n                                    values,\r\n                                    touched,\r\n                                    errors,\r\n                                    handleBlur,\r\n                                } = props;\r\n                                return (\r\n                                    <Form>\r\n                                        <div>\r\n                                            <Field\r\n                                                name=\"applicantType\"\r\n                                                select\r\n                                                label=\"Select your applicantType\"\r\n                                                style={{ margin: 8 }}\r\n                                                required\r\n                                                className={sty.textField}\r\n                                                as={TextField}\r\n                                                // helperText=\"Select your applicant Type\"\r\n                                                onBlur={handleBlur}\r\n                                            >\r\n                                                <MenuItem value='General'>\r\n                                                    General\r\n                            </MenuItem>\r\n                                                <MenuItem value='TFW'>\r\n                                                    TFW\r\n                            </MenuItem>\r\n                                            </Field>\r\n                                            <Field\r\n                                                name=\"courseType\"\r\n                                                select\r\n                                                className={sty.textField}\r\n                                                style={{ margin: 8 }}\r\n                                                required\r\n                                                as={TextField}\r\n                                                label=\"Select Course Type\"\r\n                                                onBlur={handleBlur}\r\n                                            >\r\n                                                <MenuItem value='B.Tech'>\r\n                                                    B.Tech                            </MenuItem>\r\n                                                <MenuItem value='M.Tech'>\r\n                                                    M.Tech                            </MenuItem>\r\n                                            </Field>\r\n                                            <Field\r\n                                                name=\"stream\"\r\n                                                select\r\n                                                // label=\"Please select your applicantType\"\r\n                                                style={{ margin: 8 }}\r\n                                                className={sty.textField}\r\n                                                required\r\n                                                as={TextField}\r\n                                                label=\"Select Stream\"\r\n                                                onBlur={handleBlur}\r\n                                            >\r\n                                                {values.courseType ? values.courseType === 'B.Tech' ?\r\n                                                    b_tech.map(p => {\r\n                                                        return (<MenuItem key={p} value={p}>{p}</MenuItem>)\r\n                                                    }) : m_tech.map(p => {\r\n                                                        return (<MenuItem key={p} value={p}>{p}</MenuItem>)\r\n\r\n                                                    }) : \"\"\r\n                                                }\r\n\r\n                                            </Field>\r\n                                            <Grid style={{ display: 'inline-flex' }}>\r\n\r\n                                                <Field\r\n                                                    onBlur={handleBlur}\r\n                                                    name='lateral'\r\n                                                    as={Checkbox}\r\n                                                /><p>Lateral Entry</p>\r\n                                            </Grid>\r\n                                        </div>\r\n                                        <Divider className={sty.divider} />\r\n                                        <div>\r\n                                            <Field\r\n                                                name=\"applicantName\"\r\n                                                label=\"Applicant First Name\"\r\n                                                style={{ margin: 8 }}\r\n                                                placeholder=\"First Name\"\r\n                                                margin=\"normal\"\r\n                                                error={errors.applicantName && touched.applicantName}\r\n                                                helperText={(errors.applicantName && touched.applicantName) && errors.applicantName}\r\n                                                as={TextField}\r\n                                            />\r\n                                            <Field\r\n                                                name=\"applicantName2\"\r\n                                                label=\"Middle Name(if any)\"\r\n                                                style={{ margin: 8 }}\r\n                                                placeholder=\"Middle Name\"\r\n                                                margin=\"normal\"\r\n                                                error={errors.applicantName2 && touched.applicantName2}\r\n                                                helperText={(errors.applicantName2 && touched.applicantName2) && errors.applicantName2}\r\n                                                as={TextField}\r\n                                            />\r\n                                            <Field\r\n                                                name=\"applicantName3\"\r\n                                                label=\"Applicant Last Name\"\r\n                                                style={{ margin: 8 }}\r\n                                                placeholder=\"Last Name\"\r\n                                                margin=\"normal\"\r\n                                                error={errors.applicantName3 && touched.applicantName3}\r\n                                                helperText={(errors.applicantName3 && touched.applicantName3) && errors.applicantName3}\r\n                                                as={TextField}\r\n                                            />\r\n\r\n                                            <Field\r\n                                                label=\"Categories\"\r\n                                                name=\"caste\"\r\n                                                error={errors.caste && touched.caste}\r\n                                                helperText={(errors.caste && touched.caste) && errors.caste}\r\n                                                select\r\n                                                required\r\n                                                margin='dense'\r\n                                                className={sty.textField}\r\n                                                as={TextField}\r\n                                            >\r\n                                                <MenuItem value='General'>\r\n                                                    General\r\n                            </MenuItem>\r\n                                                <MenuItem value='SC'>\r\n                                                    SC\r\n                            </MenuItem>\r\n                                                <MenuItem value='ST'>\r\n                                                    ST\r\n                            </MenuItem>\r\n                                                <MenuItem value='OBC-A'>\r\n                                                    OBC-A\r\n                            </MenuItem>\r\n                                                <MenuItem value='OBC-B'>\r\n                                                    OBC-B\r\n                            </MenuItem>\r\n                                            </Field>\r\n                                            {values.caste ? values.caste !== \"General\" &&\r\n                                                <Field\r\n                                                    name=\"castes\"\r\n                                                    label=\"Select Sub caste\"\r\n                                                    style={{ margin: 8 }}\r\n                                                    margin=\"normal\"\r\n                                                    required\r\n                                                    error={errors.castes && touched.castes}\r\n                                                    helperText={(errors.castes && touched.castes) && errors.castes}\r\n                                                    as={TextField}\r\n                                                /> : null\r\n                                            }\r\n                                            <Field\r\n                                                label=\"Student Mobile No\"\r\n                                                name=\"studentMobileNo\"\r\n                                                type='number'\r\n                                                InputProps={{\r\n                                                    startAdornment: (\r\n                                                        <InputAdornment position=\"start\">\r\n                                                            +91\r\n                                                        </InputAdornment>\r\n                                                    )\r\n                                                }}\r\n                                                className={sty.textField}\r\n                                                margin=\"dense\"\r\n                                                error={errors.studentMobileNo && touched.studentMobileNo}\r\n                                                helperText={(errors.studentMobileNo && touched.studentMobileNo) && errors.studentMobileNo}\r\n                                                as={TextField}\r\n                                            />\r\n                                            <Field\r\n                                                InputLabelProps={{\r\n                                                    shrink: true,\r\n                                                }}\r\n                                                label=\"Date of Birth\"\r\n                                                name=\"dob\"\r\n                                                className={sty.textField}\r\n                                                // helperText=\"dd.mm.yyy\"\r\n                                                margin='dense'\r\n                                                type='date'\r\n                                                error={errors.dob && touched.dob}\r\n                                                helperText={(errors.dob && touched.dob) && errors.dob}\r\n                                                as={TextField}\r\n                                            />\r\n\r\n                                            <Field\r\n                                                label=\"Medium\"\r\n                                                name=\"medium\"\r\n                                                required\r\n                                                className={sty.textField}\r\n                                                defaultValue='Bengali'\r\n                                                margin='dense'\r\n                                                select\r\n                                                error={errors.medium && touched.medium}\r\n                                                helperText={(errors.medium && touched.medium) && errors.medium}\r\n                                                as={TextField}\r\n                                            >\r\n                                                <MenuItem value='Bengali'>\r\n                                                    Bengali\r\n                            </MenuItem>\r\n                                                <MenuItem value='English'>\r\n                                                    English\r\n                            </MenuItem>\r\n                                            </Field>\r\n\r\n                                            <Field\r\n                                                placeholder=\"Enter ID No\"\r\n                                                name=\"IdNo\"\r\n                                                margin='dense'\r\n                                                className={sty.textField}\r\n                                                style={{ width: 'auto' }}\r\n                                                error={errors.IdNo && touched.IdNo}\r\n                                                helperText={(errors.IdNo && touched.IdNo) && errors.IdNo}\r\n                                                as={TextField}\r\n                                                InputProps={{\r\n                                                    startAdornment: (\r\n                                                        <Field\r\n                                                            label=\"Select ID\"\r\n                                                            variant='filled'\r\n                                                            size=\"small\"\r\n                                                            name=\"idType\"\r\n                                                            style={{ width: '20ch', marginRight: 12 }}\r\n                                                            select\r\n                                                            required\r\n                                                            error={errors.idType && touched.idType}\r\n                                                            helperText={(errors.idType && touched.idType) && errors.idType}\r\n                                                            as={TextField}>\r\n                                                            <MenuItem value='AADHAAR'>\r\n                                                                AADHAAR\r\n                                </MenuItem>\r\n                                                            <MenuItem value='PAN'>\r\n                                                                PAN\r\n                                </MenuItem>\r\n                                                            <MenuItem value='EPIC'>\r\n                                                                EPIC\r\n                                </MenuItem>\r\n                                                        </Field>\r\n                                                    )\r\n                                                }}\r\n                                            >\r\n                                            </Field>\r\n                                            <Field\r\n                                                name=\"email\"\r\n                                                className={sty.textField}\r\n                                                error={errors.email && touched.email}\r\n                                                helperText={(errors.email && touched.email) && errors.email}\r\n\r\n                                                as={TextField}\r\n                                                label=\"E-mail\"\r\n                                            />\r\n                                        </div>\r\n                                        <Divider className={sty.divider} />\r\n                                        <div>\r\n                                            <Typography variant='subtitle1'>Madhyamik (10th Level) details</Typography>\r\n                                            <Field\r\n                                                label=\"Name of School\"\r\n                                                name=\"schName10th\"\r\n                                                fullWidth\r\n                                                style={{ margin: 8 }}\r\n                                                error={errors.schName10th && touched.schName10th}\r\n                                                helperText={(errors.schName10th && touched.schName10th) && errors.schName10th}\r\n                                                as={TextField}\r\n                                            />\r\n                                            <Field\r\n                                                name=\"passYear10th\"\r\n                                                type='number'\r\n                                                label=\"Year of Passing\"\r\n                                                style={{ margin: 8 }}\r\n                                                margin='dense'\r\n                                                error={errors.passYear10th && touched.passYear10th}\r\n                                                helperText={(errors.passYear10th && touched.passYear10th) && errors.passYear10th}\r\n                                                as={TextField}\r\n                                            />\r\n\r\n                                            <Field\r\n                                                name=\"board10th\"\r\n                                                select\r\n                                                required\r\n                                                label=\"Name of Board\"\r\n                                                style={{ margin: 8 }}\r\n                                                className={sty.textField}\r\n                                                error={errors.board10th && touched.board10th}\r\n                                                helperText={(errors.board10th && touched.board10th) && errors.board10th}\r\n                                                as={TextField}\r\n                                            >\r\n                                                <MenuItem value='WEST BENGAL BOARD OF SECONDARY EDUCATION'>\r\n                                                    WEST BENGAL BOARD OF SECONDARY EDUCATION\r\n                            </MenuItem>\r\n                                                <MenuItem value='CENTRAL BOARD OF SECONDARY EDUCATION'>\r\n                                                    CENTRAL BOARD OF SECONDARY EDUCATION\r\n                            </MenuItem>\r\n                                                <MenuItem value='COUNCIL FOR THE INDIAN SCHOOL CERTIFICATE EXAMINATION'>\r\n                                                    COUNCIL FOR THE INDIAN SCHOOL CERTIFICATE EXAMINATION\r\n                            </MenuItem>\r\n                                                <MenuItem value='OTHERS'>\r\n                                                    OTHERS\r\n                           </MenuItem>\r\n                                            </Field>\r\n                                            <Field\r\n                                                error={errors.registrationNo10th && touched.registrationNo10th}\r\n                                                helperText={(errors.registrationNo10th && touched.registrationNo10th) && errors.registrationNo10th}\r\n                                                as={TextField}\r\n\r\n                                                name=\"registrationNo10th\"\r\n                                                label=\"10th Registration No.\"\r\n                                                style={{ margin: 8 }}\r\n                                                margin='dense'\r\n                                            />\r\n                                            <Field\r\n                                                error={errors.rollNo10th && touched.rollNo10th}\r\n                                                helperText={(errors.rollNo10th && touched.rollNo10th) && errors.rollNo10th}\r\n                                                as={TextField}\r\n\r\n                                                name=\"rollNo10th\"\r\n                                                label=\"10th Roll No\"\r\n                                                style={{ margin: 8 }}\r\n                                                margin='dense'\r\n                                            />\r\n                                            <Field\r\n                                                error={errors.percent10th && touched.percent10th}\r\n                                                helperText={(errors.percent10th && touched.percent10th) && errors.percent10th}\r\n                                                as={TextField}\r\n\r\n                                                name=\"percent10th\"\r\n                                                label=\"Marks %\"\r\n                                                style={{ margin: 8 }}\r\n                                                type='number'\r\n                                                margin='dense'\r\n                                            />\r\n                                        </div>\r\n                                        <Divider className={sty.divider} />\r\n                                        <div>\r\n                                            <Typography variant='subtitle1'>Higher Secondary (12th Level) details</Typography>\r\n                                            <Field\r\n                                                label=\"Name of School\"\r\n                                                name=\"schName12th\"\r\n                                                error={errors.schName12th && touched.schName12th}\r\n                                                helperText={(errors.schName12th && touched.schName12th) && errors.schName12th}\r\n                                                as={TextField}\r\n                                                fullWidth\r\n                                                style={{ margin: 8 }}\r\n                                            />\r\n                                            <Field\r\n                                                error={errors.passYear12th && touched.passYear12th}\r\n                                                helperText={(errors.passYear12th && touched.passYear12th) && errors.passYear12th}\r\n                                                as={TextField}\r\n\r\n                                                type='number'\r\n                                                name=\"passYear12th\"\r\n                                                label=\"Year of Passing\"\r\n                                                style={{ margin: 8 }}\r\n                                                margin='dense'\r\n                                            />\r\n                                            <Field\r\n                                                name=\"board12th\"\r\n                                                required\r\n                                                error={errors.board12th && touched.board12th}\r\n                                                helperText={(errors.board12th && touched.board12th) && errors.board12th}\r\n                                                as={TextField}\r\n                                                select\r\n                                                label=\"Name of Board\"\r\n                                                style={{ margin: 8 }}\r\n                                                className={sty.textField}\r\n                                            >\r\n                                                <MenuItem value='WEST BENGAL COUNCIL OF HIGHER SECONDARY EDUCATION'>\r\n                                                    WEST BENGAL COUNCIL OF HIGHER SECONDARY EDUCATION\r\n                            </MenuItem>\r\n                                                <MenuItem value='CENTRAL BOARD OF SECONDARY EDUCATION'>\r\n                                                    CENTRAL BOARD OF SECONDARY EDUCATION\r\n                            </MenuItem>\r\n                                                <MenuItem value='COUNCIL FOR THE INDIAN SCHOOL CERTIFICATE EXAMINATION'>\r\n                                                    COUNCIL FOR THE INDIAN SCHOOL CERTIFICATE EXAMINATION\r\n                            </MenuItem>\r\n                                                <MenuItem value='OTHERS'>\r\n                                                    OTHERS\r\n                           </MenuItem>\r\n\r\n\r\n                                            </Field>\r\n                                            <Field\r\n                                                error={errors.registrationNo12th && touched.registrationNo12th}\r\n                                                helperText={(errors.registrationNo12th && touched.registrationNo12th) && errors.registrationNo12th}\r\n                                                as={TextField}\r\n\r\n                                                name=\"registrationNo12th\"\r\n                                                label=\"HS Registration No.\"\r\n                                                style={{ margin: 8 }}\r\n                                                margin='dense'\r\n                                            />\r\n                                            <Field\r\n                                                error={errors.rollNo12th && touched.rollNo12th}\r\n                                                helperText={(errors.rollNo12th && touched.rollNo12th) && errors.rollNo12th}\r\n                                                as={TextField}\r\n\r\n                                                name=\"rollNo12th\"\r\n                                                label=\"HS Roll No\"\r\n                                                style={{ margin: 8 }}\r\n                                                // type='number'\r\n                                                margin='dense'\r\n                                            />\r\n\r\n                                        </div>\r\n                                        <Divider className={sty.divider} />\r\n                                        <div>\r\n                                            <Typography variant='subtitle1'> Entrance details</Typography>\r\n\r\n                                            <Field\r\n                                                error={errors.entranceType && touched.entranceType}\r\n                                                helperText={(errors.entranceType && touched.entranceType) && errors.entranceType}\r\n                                                as={TextField}\r\n                                                select\r\n                                                name=\"entranceType\"\r\n                                                label=\"Select Entrance Exam\"\r\n                                                className={sty.textField}\r\n                                                margin='dense'\r\n                                            >\r\n                                                <MenuItem value='WBJEE'>WBJEE</MenuItem>\r\n                                                <MenuItem value='JELET'>JELET</MenuItem>\r\n                                            </Field>\r\n\r\n                                            <Field\r\n                                                error={errors.rankEE && touched.rankEE}\r\n                                                helperText={(errors.rankEE && touched.rankEE) && errors.rankEE}\r\n                                                as={TextField}\r\n\r\n                                                name=\"rankEE\"\r\n                                                label={values.entranceType + ` Rank`}\r\n                                                style={{ margin: 8 }}\r\n                                                margin='dense'\r\n                                                type='number'\r\n                                            />\r\n                                            <Field\r\n                                                error={errors.rollNoEE && touched.rollNoEE}\r\n                                                helperText={(errors.rollNoEE && touched.rollNoEE) && errors.rollNoEE}\r\n                                                as={TextField}\r\n                                                name=\"rollNoEE\"\r\n                                                label={values.entranceType + ` Roll Number`}\r\n                                                style={{ margin: 8 }}\r\n                                                margin='dense'\r\n                                            />\r\n                                            <Field\r\n                                                error={errors.passYearEE && touched.passYearEE}\r\n                                                helperText={(errors.passYearEE && touched.passYearEE) && errors.passYearEE}\r\n                                                as={TextField}\r\n\r\n                                                type='number'\r\n                                                name=\"passYearEE\"\r\n                                                label={values.entranceType + ` Year of Passing`}\r\n                                                style={{ margin: 8 }}\r\n                                                margin='dense'\r\n                                            />\r\n\r\n                                        </div>\r\n                                        <Divider className={sty.divider} />\r\n                                        <div>\r\n                                            <Typography variant='subtitle1'>Details of Last exam / Graduation </Typography>\r\n\r\n                                            <Field\r\n                                                error={errors.nameLastExam && touched.nameLastExam}\r\n                                                helperText={(errors.nameLastExam && touched.nameLastExam) && errors.nameLastExam}\r\n                                                as={TextField}\r\n                                                name=\"nameLastExam\"\r\n                                                label=\"Name of Exam\"\r\n                                                style={{ margin: 8 }}\r\n                                                margin='dense'\r\n                                                type='text'\r\n                                            />\r\n                                            <Field\r\n                                                error={errors.boardLastExam && touched.boardLastExam}\r\n                                                helperText={(errors.boardLastExam && touched.boardLastExam) && errors.boardLastExam}\r\n                                                as={TextField}\r\n                                                name=\"boardLastExam\"\r\n                                                label=\"Board / University\"\r\n                                                style={{ margin: 8 }}\r\n                                                margin='dense'\r\n                                            />\r\n                                            <Field\r\n                                                error={errors.yearPassLastExam && touched.yearPassLastExam}\r\n                                                helperText={(errors.yearPassLastExam && touched.yearPassLastExam) && errors.yearPassLastExam}\r\n                                                as={TextField}\r\n                                                name=\"yearPassLastExam\"\r\n                                                label=\"Year of Passing\"\r\n                                                style={{ margin: 8 }}\r\n                                                type='number'\r\n                                                margin='dense'\r\n                                            />\r\n                                            <Field\r\n                                                error={errors.marksPassLastExam && touched.marksPassLastExam}\r\n                                                helperText={(errors.marksPassLastExam && touched.marksPassLastExam) && errors.marksPassLastExam}\r\n                                                as={TextField}\r\n                                                name=\"marksPassLastExam\"\r\n                                                label=\"Marks %\"\r\n                                                style={{ margin: 8 }}\r\n                                                type='number'\r\n                                                margin='dense'\r\n                                            />\r\n                                        </div>\r\n                                        <Divider className={sty.divider} />\r\n                                        <br />\r\n                                        <Fab disabled={loading} style={{ margin: '20px 0' }} color=\"primary\" variant='extended' type='submit' >\r\n                                            {loading ? <><p>Processing</p><CircularProgress /> </> : 'submit & Next'}\r\n                                        </Fab>\r\n                                    </Form>)\r\n                            }}\r\n                        </Formik>\r\n                        }\r\n                        {/* {next === 1 && <Form1 success={formS} />} */}\r\n                        {next == 2 && <Form2 success={formS} id={id} />}\r\n                        {next == 3 && <Form3 id={id} />}\r\n                    </Paper>\r\n                </Grid >\r\n            </>}</>);\r\n}\r\n\r\nexport default FormMain","\r\nimport React from 'react'\r\nimport { Grid, Paper, Typography, makeStyles,  Checkbox, Fab } from '@material-ui/core'\r\nimport {  useHistory } from 'react-router-dom'\r\nimport { toast } from 'react-toastify'\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n    root:{\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    paper: {\r\n        padding: 12,\r\n        margin: 20,\r\n        width: '100%'\r\n    },\r\n    banner: {\r\n        backgroundImage: \"url(\" + require(\"./component/static/banner.webp\") + \")\",\r\n        width: '100%',\r\n        height: '267px',\r\n        backgroundPositionX: 'right',\r\n        backgroundPositionY: 'bottom',\r\n    \r\n        background: 'center',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundSize: 'cover',\r\n        [theme.breakpoints.down('xs')]: {\r\n          height: '155px',\r\n        }\r\n      }\r\n}))\r\n\r\nconst Test = () => {\r\n    const sty = useStyle()\r\n    const history = useHistory()\r\n    const [agree, setAgree] = React.useState(false)\r\n\r\n    function processNext() {\r\n        if (agree) {\r\n            history.push('/form', { agree: agree })\r\n        } else {\r\n\r\n            toast.warn('You have to agree the terms & conditions to proceed further !!')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Grid className={sty.root}>\r\n    <div className={sty.banner} />\r\n\r\n        <Grid  container>\r\n            <Paper className={sty.paper} style={{ textAlign: \"justify\" }}>\r\n                <Typography align='center' gutterBottom variant='h4'>ADMISSION NOTICE {new Date().getFullYear()}</Typography>\r\n                <Typography variant='subtitle2'>Online application for admission to B. Tech /M. Tech program for the academic session 2019-20 will commence from 04th July 2019 at 10 AM only through web portal of the college website <a target='_blank' rel=\"noopener noreferrer\" href='http://www.gcect.ac.in'>www.gcect.ac.in</a>.</Typography>\r\n                <p><strong>For any online application related issue and queries, please write us to:</strong><a href=\"mailto:gcectwb@gmail.com?subject=Enquiry\">gcectwb@gmail.com</a></p>\r\n                <p><strong>ONLINE ADMISSION PROCEDURE</strong></p>\r\n                <p>1. Visit College website and click&nbsp;Apply Online tab.</p>\r\n                <p>2. Please read the instructions carefully before you proceed.</p>\r\n                <p>3. Next, read the terms &amp; conditions carefully and only after accepting the <strong><em>Terms &amp; Conditions</em></strong>, you can proceed further.</p>\r\n                <p>4. At the next page, choose your admission status as regular or regular with TFW and enter the details including the year of passing of your 10 + 2 Examination.</p>\r\n                <p>5. Now choose whether you belong to SC/ST category or not.</p>\r\n                <p>6. Now enter the marks of different subjects you obtained in the higher secondary examination.</p>\r\n                <p><strong>You must have passed 10+2 examination with Physics and Mathematics as compulsory subjects along with one of the Chemistry/ Biotechnology/ Biology/ Technical Vocational subject and Obtained at least 45% marks (40% in case of candidate belonging to reserved category) in the above subjects taken together. You also </strong><strong>have to pass individually both theory and practical in all subjects at 10+2 level for getting admission in any course of our institute.</strong></p>\r\n                <p>7. You must have a valid WBJEE rank along with domicile certificate in proof of permanent residency inthe state of West Bengal.</p>\r\n                <p>8. You must have taken&nbsp;&nbsp; provisional admission attending any Reporting Centre as specified by West Bengal Joint Entrance Board in the year 2019.</p>\r\n                <p>9. Candidates are eligible to take admission in a specific branch of B. Tech program based on the recommendation of West Bengal Joint Entrance e-counselling portal.</p>\r\n                <p>10. An application number will be generated and a SMS will be sent to the registered mobile number with the application number for login.</p>\r\n                <p>11. Login with the application number or registered mobile number and date of birth as password. Now upload your recent colour photo &amp; signature.</p>\r\n                <p>12. Next, download your application form with uploaded photo &amp; signature and take a print out.</p>\r\n                <p>13. Finally goto Payment page &amp; take a print out of generated challan.</p>\r\n                <p>14. Pay Admission and other fees as appeared in the challan in State Bank of India, Beliaghata Branch.</p>\r\n                <p>After remitting the fees, wait for 2 working days and then check by logging in whether your payment status shows successful.</p>\r\n                <p>N.B. Payment can also be made through NEFT in the specified Bank Account and the NEFT transaction slip is to be submitted in original at the time of document verification.</p>\r\n                <p>15. As per the norms of UGC,an affidavit on anti-ragging is to be submitted online (<a target='_blank' rel=\"noopener noreferrer\" href=\"http://www.antiragging.in/Site/Affidavits_Registration.aspx\">here</a>) and hard copy of the anti-ragging affidavit is to be submitted at the time of document verification by the student and his/her guardian.</p>\r\n                <p><strong><em>LAST DATE OF ONLINE APPLICATION AND SUBMISSION OF APPLICATION FEES IS 20th&nbsp;&nbsp;JULY, 2019 UP TO 4.00 P.M.</em></strong></p>\r\n                <p><strong>THE FOLLOWING DOCUMENTS TO BE PRODUCED FOR PHYSICALVERIFICATION</strong></p>\r\n                <p><strong>a. Signed downloaded application form. </strong></p>\r\n                <p><strong>b. Provisional admission letter issued by R.C. in-charge in original.</strong></p>\r\n                <p><strong>c. Original admit card of WBJEE-2019.</strong></p>\r\n                <p><strong>d. Original rank card of WBJEE-2019.</strong></p>\r\n                <p><strong>e. Domicile certificate from the competent authorities as per WBJEEB proforma in original.</strong></p>\r\n                <p><strong>f. Original certificatefor age verification (Birth certificate or certificate/admit card of Madhyamik or equivalent examination where the date of birth is mentioned).</strong></p>\r\n                <p><strong>g. Original marks sheet of 10th and 12thstandard or equivalent examinations from recognised board. </strong></p>\r\n                <p><strong>h. Cast certificate/disability certificate (If any) issued in favour of the candidate (Issued by the competent authority of the Government of West Bengal).</strong></p>\r\n                <p><strong>i. Original bank challan (Candidate&rsquo;s copy)/NEFT Transaction slip [After depositing fees to the Bank]. </strong></p>\r\n                <p><strong>j. Income Certificate in original from the competent authority as uploaded in WBJEE-2019 portal for TFW candidates.</strong></p>\r\n                <p><strong>k. Physical fitness certificate and eyesight certificate from a registered medical practitioner&nbsp;in original. </strong></p>\r\n                <p><strong>l. School leaving/Character certificate issued by the Head of the institute last attended in original.&nbsp; </strong></p>\r\n                <p><strong>m. One passport size colour photo.</strong></p>\r\n                <p><strong>n. Original annual family income certificate from the competent authorities (for other than TFW candidates)</strong></p>\r\n                <p><strong>o. PHOTOCOPIES OF ALL THE DOCUMENTS MENTIONED ABOVE.</strong></p>\r\n                <p>16. Check college website regularly for Commencement of classes and other academic notices and regulations.</p>\r\n                <p><strong>For any Online Application related issue, please write us to:</strong></p>\r\n                <p><a href=\"mailto:gcectwb@gmail.com\">gcectwb@gmail.com</a> or contact Mr. Jayanta Kumar Chowdhury, Registrar (033) 2363-2072.</p>\r\n            </Paper>\r\n            <Paper className={sty.paper} style={{ textAlign: \"justify\" }}>\r\n                <Typography align=\"center\" variant=\"h4\" gutterBottom>Terms & Conditions</Typography>\r\n                {/* <p> */}\r\n                <p>I have very carefully read the regulation of the institute and have understood that if my class attendance in an academic semester falls&nbsp;<strong><em>below 75%</em></strong> of the total number of classes held in the semester would render me <strong>DIS-QUALIFIED&nbsp;</strong>&nbsp;to seat for the end semester examination of that academic session as per the existing ACADEMIC REGULATION of the institute.</p>\r\n\r\n                <p>I further declare that I shall&nbsp;<strong>NOT</strong> request the college authorities for any relaxation/exemption on attendance percentage on any ground whatsoever.</p>\r\n\r\n                <p>In the light of the above-mentioned regulations I promise that</p>\r\n\r\n                <p>1. I will <strong>NOT&nbsp;</strong>take part in ragging and in the event of any such happening, will &nbsp;intimate&nbsp;&nbsp;the college authority immediately.</p>\r\n\r\n                <p>2. I will <strong>NOT</strong> take up any job assignment, in the form of employment or business, during my class-hours of&nbsp;&nbsp;the College.</p>\r\n\r\n                <p>3. I will <strong>NOT</strong> attend any coaching centre or private tuition or any training institute, during my class-hours of&nbsp;&nbsp;the College.</p>\r\n\r\n                <p>&nbsp;</p>\r\n\r\n                <p>In addition to the above-mentioned pledges made by me, I further commit that I will regularly follow the Notices stuck on the college notice board and/or uploaded on the college website.</p>\r\n                {/* </p> */}\r\n            </Paper>\r\n\r\n            <Paper className={sty.paper} style={{ textAlign: \"center\" }}>\r\n                <Typography align='center' variant=\"h4\" gutterBottom>Important Documents</Typography>\r\n                \r\n                    <h3><a href=\"admin/pages/pic/download/College Brochure.pdf\" target=\"_blank\" rel=\"noopener noreferrer\">College Brochure</a></h3>\r\n                    {/* <!--<h3><a href=\"docs/College Brochure.pdf\" target=\"_blank\">College Brochure</a></h3>--> */}\r\n                \r\n            </Paper>\r\n\r\n            <Paper className={sty.paper} style={{ color: '#f00' }}>\r\n                <center>\r\n                    <Typography variant=\"h4\" gutterBottom>!!! Notice !!!</Typography>\r\n                    <br />\r\n                    <p >Please Go to Student Login and Update Payment and Upload Photo &amp; Signature to complete the Application Process</p>\r\n                    <p >You will get SMS alert with your Application Id, Username &amp; Password only after completion of the 3rd part of the application form which includes your Photo and signature.</p>\r\n                    <p >If in case SMS with login details will not reach yor mobile use your registered <strong>mobile number (xxxxxxxxxx)</strong> &amp; <strong>Date of Birth (YYYY-MM-DD)</strong> <br />\r\n                          as the <strong>User Id &amp; Password</strong></p>\r\n                </center>\r\n            </Paper>\r\n            <Grid container justify='center' alignItems='center' style={{paddingBottom:50}}>\r\n            <Typography color='textPrimary' style={{ margin: 12, width:'100%', align: 'center',textAlign:'center' }}>I have read the instructions (including  College admission rules) carefully and I shall abide by the decision taken by the college authority in this regard.\r\n             </Typography>\r\n             <Grid container justify='center' alignItems='center'>\r\n\r\n                    <Checkbox onChange={() => { setAgree(!agree) }} /><Typography color='textPrimary'>I Agree all terms &amp; conditions</Typography>\r\n             </Grid>\r\n             <br/>\r\n                        <Fab variant='extended' onClick={processNext}  color='primary'>Proceed </Fab>\r\n</Grid>\r\n\r\n            {/* </Paper> */}\r\n        </Grid >\r\n</Grid>\r\n    )\r\n}\r\n\r\nexport default Test","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { Grid, Typography, Paper, List, ListItemText, ListItem, Divider, ListItemSecondaryAction, CircularProgress } from '@material-ui/core';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { url } from './config/config';\r\nimport PropType from 'prop-types';\r\nimport { toast } from 'react-toastify';\r\nimport { useState } from 'react';\r\nconst FileDownload = require(\"js-file-download\");\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  rootMain: {\r\n    minHeight: 'calc(100vh - 64px)',\r\n    backgroundColor: theme.palette.background.default,\r\n    [theme.breakpoints.down('xs')]: {\r\n\r\n    }\r\n  },\r\n  root: {\r\n    padding: ' 12px 50px',\r\n    [theme.breakpoints.down('sm')]: {\r\n      padding: 3\r\n    }\r\n  },\r\n  paper: {\r\n    padding: 15,\r\n    marginBottom: 12,\r\n    minWidth: '50%',\r\n    [theme.breakpoints.down('xs')]: {\r\n      width: 'inherit',\r\n      padding: '12px 3px'\r\n      // overflowX:'auto'\r\n    }\r\n\r\n  },\r\n  banner: {\r\n    backgroundImage: \"url(\" + require('./component/static/banner.webp') + \")\",\r\n    width: '100%',\r\n    height: '267px',\r\n    backgroundPositionX: 'right',\r\n    backgroundPositionY: 'bottom',\r\n\r\n    background: 'center',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundSize: 'cover',\r\n    [theme.breakpoints.down('xs')]: {\r\n      height: '155px',\r\n    }\r\n  }\r\n}));\r\n\r\n\r\nDashboard.propType = {\r\n  id: PropType.string.isRequired\r\n}\r\nexport default function Dashboard(props) {\r\n  const sty = useStyles();\r\n  const history = useHistory()\r\n  const [loadingA, setLoadingA] = useState(false)\r\n  const [loadingC, setLoadingC] = useState(false)\r\n  const dnlApplication = () => {\r\n    setLoadingA(true)\r\n    fetch(`${url}/api/student/${props.id}/application`, {\r\n      method: 'GET',\r\n      credentials: 'include',\r\n      headers: {\r\n        'Content-Type': 'Application/pdf'\r\n      }\r\n    }).then(response => {\r\n      console.log(response);\r\n      setLoadingA(false)\r\n      if (response.status !== 200) {\r\n        toast.error(response.statusText)\r\n        return\r\n      } else {\r\n        response.blob().then(response => {\r\n          FileDownload(response, `Application${props.id}.pdf`)\r\n        })\r\n      }\r\n    }).catch(err => {\r\n      setLoadingA(false)\r\n      toast.error(err.message)\r\n    })\r\n  }\r\n  const dwnldChallan = () => {\r\n    setLoadingC(true)\r\n    fetch(`${url}/api/student/${props.id}/challan`, {\r\n      method: 'GET',\r\n      credentials: 'include',\r\n      headers: {\r\n        'Content-Type': 'Application/pdf'\r\n      }\r\n    }).then(res => {\r\n      setLoadingC(false)\r\n      if (res.status !== 200) {\r\n        toast.error(res.statusText)\r\n        return\r\n      } else {\r\n        res.blob().then(response => {\r\n          FileDownload(response, `Application${props.id}.pdf`)\r\n        })\r\n      }\r\n    }).catch(err => {\r\n      setLoadingC(false)\r\n      console.error(err)\r\n    });\r\n\r\n\r\n    // .then(response => { console.log(response); response.blob() }).then(response => {\r\n    //   setLoadingA(false)\r\n    //   console.log(response)\r\n    //   FileDownload(response, `Challan${props.id}.pdf`)\r\n    // }\r\n    // ).catch(err => {\r\n    //   setLoadingA(false)\r\n    //   toast.error(err.message)\r\n    // })\r\n  }\r\n  // const printApplication = () => {\r\n  //   setLoadingA(true)\r\n  //   fetch(`${url}/api/student/${props.id}/challan`, {\r\n  //     method: 'GET',\r\n  //     credentials: 'include',\r\n  //     headers: {\r\n  //       'Content-Type': 'Application/pdf'\r\n  //     }\r\n  //   }).then(res => {\r\n  //     setLoadingC(false)\r\n  //     if (res.status !== 200) {\r\n  //       toast.error(res.statusText)\r\n  //       return\r\n  //     } else {\r\n  //       res.blob()\r\n  //         .then(blob => {\r\n  //           const href = window.URL.createObjectURL(blob);\r\n  //           window.location = href\r\n  //         })\r\n  //     }\r\n  //   }).catch(err => console.error(err));\r\n\r\n\r\n  //   // .then(response => { console.log(response); response.blob() }).then(response => {\r\n  //   //   setLoadingA(false)\r\n  //   //   console.log(response)\r\n  //   //   FileDownload(response, `Challan${props.id}.pdf`)\r\n  //   // }\r\n  //   // ).catch(err => {\r\n  //   //   setLoadingA(false)\r\n  //   //   toast.error(err.message)\r\n  //   // })\r\n  // }\r\n  const upApplication = () => {\r\n    history.push('/upload')\r\n  }\r\n  const payApplication = () => {\r\n    history.push('/pay')\r\n  }\r\n\r\n\r\n  return (<div className={sty.rootMain}>\r\n    <div className={sty.banner} />\r\n    <Grid container justify='center' className={sty.root}>\r\n      <Paper className={sty.paper}>\r\n        <Typography variant='h5'>Application No : {props.id}</Typography>\r\n        <Typography variant='caption' color='error'>Please, deposit application fee to the bank and then update your Payment Status for payment verification.<br /> After verification \"Application Form Print\" option will be activated.</Typography>\r\n        <Divider />\r\n        <List>\r\n          <ListItem disabled={loadingC} onClick={dwnldChallan} button>\r\n            <ListItemText primary='Print Challan' />\r\n            <ListItemSecondaryAction>\r\n              {loadingC && <CircularProgress />}\r\n            </ListItemSecondaryAction>\r\n          </ListItem>\r\n          <ListItem onClick={upApplication} disabled button>\r\n            <ListItemText primary='Upload Documents' />\r\n          </ListItem>\r\n          <ListItem onClick={payApplication} button>\r\n            <ListItemText primary='Update Payment status' />\r\n          </ListItem>\r\n          <ListItem disabled={loadingA} onClick={dnlApplication} button>\r\n            <ListItemText primary='Print Application' />\r\n            <ListItemSecondaryAction>\r\n              {loadingA && <CircularProgress />}\r\n            </ListItemSecondaryAction>\r\n          </ListItem>\r\n        </List>\r\n      </Paper>\r\n    </Grid>\r\n  </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport {Toolbar,Link, CircularProgress} from '@material-ui/core'; \r\nimport Button from '@material-ui/core/Button'; \r\nimport { Link as RouterLink, useHistory } from 'react-router-dom';\r\nimport PropType from 'prop-types'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1, \r\n    display:'flex'\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  grow:{\r\n    flexGrow:1\r\n  },\r\n  title: { \r\n    color: '#fff',\r\n    fontSize: 'large', \r\n\r\n},\r\n}));\r\n\r\nfunction Appbar(props) {\r\n  const classes = useStyles();\r\n  const history=useHistory()\r\n\r\nconst login=()=>{\r\n  history.push('/login')\r\n}\r\n// console.log(props.auth);\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n         {/* <img height={35} alt='logo' src={require('../component/static/logo.webp')}/> */}\r\n          \r\n          <Link to='/' underline='none' component={RouterLink} className={classes.title} variant=\"h1\" noWrap>\r\n          GCECT Admission Portal\r\n          </Link>\r\n          <div className={classes.grow} />\r\n         {props.auth===true ? <Button onClick={props.out} color=\"inherit\">Logout</Button>\r\n        :props.auth===false ?<Button onClick={login} color=\"inherit\">Login</Button>\r\n        :props.auth===null?<CircularProgress/>:\"\"}\r\n         </Toolbar>\r\n      </AppBar> \r\n    </div>\r\n  );\r\n}\r\nAppbar.propType = { \r\n  auth: PropType.bool.isRequired,\r\n}\r\nexport default Appbar;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Grid, Typography, Paper, TextField, Divider, Button } from '@material-ui/core';\r\nimport { useHistory } from 'react-router-dom';\r\nimport PropType from 'prop-types'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: ' 12px 50px',\r\n    // lineHeight:1\r\n    backgroundColor: '#eee',\r\n    // minHeight: 'calc(100vh - )',\r\n    [theme.breakpoints.down('sm')]: {\r\n      // width: 'inherit',\r\n      padding: 3\r\n      // overflowX:'auto'\r\n    }\r\n  },\r\n  paper: {\r\n    padding: 15,\r\n    marginBottom: 12,\r\n    minWidth: '50%',\r\n    [theme.breakpoints.down('xs')]: {\r\n      width: 'inherit',\r\n      padding: '12px 3px'\r\n      // overflowX:'auto'\r\n    }\r\n\r\n  },\r\n  banner: {\r\n    backgroundImage: \"url(\" + require('./component/static/banner.webp') + \")\",\r\n    width: '100%',\r\n    height: '267px',\r\n    backgroundPositionX: 'right',\r\n    backgroundPositionY: 'bottom',\r\n\r\n    background: 'center',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundSize: 'cover',\r\n    [theme.breakpoints.down('xs')]: {\r\n      height: '155px',\r\n    }\r\n  },\r\n  inputx:{\r\n      margin:'35px 0 2px'\r\n  },\r\n  input:{\r\n      margin:'5px 12px 12px 0'\r\n  }\r\n}));\r\nUpload.propType = { \r\n  id: PropType.string.isRequired,\r\n}\r\nexport default function Upload() {\r\n  const sty = useStyles();\r\n  const history = useHistory()\r\n  const [state,setState]=React.useState({})\r\n  const handleChange=(e)=>{\r\n      setState({[e.target.name]:e.target.file[0]})\r\n  }\r\n  const x=()=>{\r\n    //   state.x\r\n  }\r\n  const xi=()=>{\r\n    //   state.x\r\n  }\r\n  const jee=()=>{\r\n    //   state.x\r\n  }\r\n  const id=()=>{\r\n    //   state.x\r\n  }\r\n  const income=()=>{\r\n    //   state.x\r\n  }\r\n  const rc=()=>{\r\n    //   state.x\r\n  }\r\n  const caste=()=>{\r\n    //   state.x\r\n  }\r\n  const pwd=()=>{\r\n    //   state.x\r\n  }\r\n\r\n\r\n  return (<>\r\n    <div className={sty.banner} />\r\n    <Grid container justify='center' className={sty.root}>\r\n      <Paper className={sty.paper}>\r\n        <Typography variant='h5'>Application No : {12}</Typography>\r\n        <Typography variant='caption' color='error'>\tMax Size for Both file should be maximum 500 KB\t\r\n \t<br/>JPG, JPEG, PDF files are allowed only</Typography>\r\n        <Divider />\r\n\r\n        <Typography variant='subtitle1' color='primary' className={sty.inputx}>JEE Rank Card</Typography>\r\n        <TextField type='file' name='jee' onChange={handleChange} className={sty.input}  />\r\n        <Button variant='contained' color='primary' onClick={jee} >Upload</Button>\r\n        \r\n        <Typography variant='subtitle1' color='primary' className={sty.inputx}>10th Result</Typography>\r\n        <TextField type='file'  name='x' className={sty.input}  onChange={handleChange}/>\r\n        <Button variant='contained' color='primary' onClick={x}>Upload</Button>\r\n        \r\n        <Typography variant='subtitle1' color='primary' className={sty.inputx}>12th Result</Typography>\r\n        <TextField type='file'  name='xii' className={sty.input}  onChange={handleChange} />\r\n        <Button variant='contained' color='primary' onClick={xi}>Upload</Button>\r\n        \r\n        <Typography variant='subtitle1' color='primary' className={sty.inputx}>Provisional Allotment Letter From RC</Typography>\r\n        <TextField type='file'  name='rc' onChange={handleChange} className={sty.input} />\r\n        <Button variant='contained' color='primary' onClick={rc}>Upload</Button>\r\n         \r\n        <Typography variant='subtitle1' color='primary' className={sty.inputx}>Identity Proof</Typography>\r\n        <TextField type='file'  name='id' className={sty.input}  onChange={handleChange} />\r\n        <Button variant='contained' color='primary' onClick={id}>Upload</Button>\r\n\r\n        <Typography variant='subtitle1' className={sty.inputx}>Cast Certificate (if applicable)</Typography>\r\n        <TextField type='file'  name='cast' className={sty.input}  />\r\n        <Button variant='contained' color='primary' onClick={caste}>Upload</Button>\r\n        \r\n        <Typography variant='subtitle1' className={sty.inputx}>Disability Certificate (if applicable)</Typography>\r\n        <TextField type='file'  name='pwd' className={sty.input}  />\r\n        <Button variant='contained' color='primary' onClick={pwd}>Upload</Button>\r\n        \r\n        <Typography variant='subtitle1' className={sty.inputx}>Income Proof (if applicable)</Typography>\r\n        <TextField type='file'  name='income' className={sty.input}  />\r\n        <Button variant='contained' color='primary' onClick={income}>Upload</Button>\r\n       \r\n      </Paper>\r\n    </Grid>\r\n  </>);\r\n}\r\n","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { Grid, Typography, Paper, TextField, Divider,  Fab, CircularProgress } from '@material-ui/core';\r\nimport { url } from './config/config';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        padding: ' 12px 50px',\r\n        // lineHeight:1\r\n        backgroundColor: theme.palette.background.default,\r\n        [theme.breakpoints.down('sm')]: {\r\n            // width: 'inherit',\r\n            padding: 3\r\n            // overflowX:'auto'\r\n        }\r\n    },\r\n    paper: {\r\n        padding: 15,\r\n        marginBottom: 12,\r\n        // margin:'0 12%',\r\n        minWidth: '50%',\r\n        [theme.breakpoints.down('xs')]: {\r\n            width: 'inherit',\r\n            padding: '12px 3px'\r\n            // overflowX:'auto'\r\n        }\r\n\r\n    },\r\n    banner: {\r\n        backgroundImage: \"url(\" + require('./component/static/banner.webp') + \")\",\r\n        width: '100%',\r\n        height: '267px',\r\n        backgroundPositionX: 'right',\r\n        backgroundPositionY: 'bottom',\r\n\r\n        background: 'center',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundSize: 'cover',\r\n        [theme.breakpoints.down('xs')]: {\r\n            height: '155px',\r\n        }\r\n    },\r\n    detail: {\r\n        margin: 12, lineHeight: 3,\r\n        [theme.breakpoints.down('xs')]: {\r\n            margin: 0\r\n        }\r\n    },\r\n    c: {\r\n        marginTop: 18,\r\n        [theme.breakpoints.down('xs')]: {\r\n            justifyContent: 'left',\r\n            paddingLeft: 12\r\n        }\r\n    }\r\n}));\r\n\r\nexport default function Pay(props) {\r\n    const sty = useStyles();\r\n    const [state, setState] = useState({})\r\n    const [loading, setLoading] = useState(false)\r\n    const handleChange = (e) => {\r\n        setState({ ...state, [e.target.name]: e.target.value })\r\n    }\r\n    const submit = (e) => {\r\n        setLoading(true)\r\n        e.preventDefault()\r\n        fetch(`${url}/api/student/${props.id}/transactionId`, {\r\n            method: 'POST',\r\n            credentials: 'include',\r\n            headers: { 'Content-type': 'Application/json' },\r\n            body: JSON.stringify(state)\r\n        }).then(res => {\r\n            res.json().then(resp => {\r\n                setLoading(false)\r\n                console.log(resp);\r\n                if (resp.success === true) {\r\n                    toast.success('Success')\r\n                }\r\n                if (resp.error === true) {\r\n                    toast.error(resp.message)\r\n                }\r\n            })\r\n        }\r\n        ).catch(r => {\r\n            setLoading(false)\r\n            toast.error('Internal server error! Please try again later.')\r\n            console.log(r)\r\n        })\r\n    }\r\n\r\n\r\n    return (<div style={{ minHeight: 'calc(100vh - 64px)' }}>\r\n        <div className={sty.banner} />\r\n        <Grid container justify='center' className={sty.root}>\r\n            <Paper className={sty.paper}>\r\n                <Typography variant='h5'>Application No : {props.id}</Typography>\r\n                <Typography variant='caption' color='error'>Please, deposit application fee to the bank and then update your Payment Status for payment verification.<br /> After verification \"Application Form Print\" option will be activated.</Typography>\r\n                <Divider />\r\n                <Grid container justify='center' className={sty.c}>\r\n\r\n                    <div className={sty.detail} >\r\n                        {/* <p>Registration No\t:\t<b>R200531100951</b></p> */}\r\n                        {/* <p>\tRegistration Date\t:\t<b>31-05-2020</b></p> */}\r\n                        <p>Course\t:\t<b>B-Tech/M-Tech</b></p>\r\n                        <p>Bank\t:\t<b>STATE BANK OF INDIA</b></p>\r\n                        <p>Branch Name\t:\t<b>Beleghata</b></p>\r\n                        <p>Branch Code\t\t:\t<b>001798</b></p>\r\n                    </div>\r\n                    <form onSubmit={submit}>\r\n                        <div className={sty.detail}>\r\n                            {/* <p>Applicant Name\t:\t<b>DIPANJAN  PANJA</b></p> */}\r\n                            {/* <p>Total Fees\t:<b>15201.00</b></p> */}\r\n                            <p>A/c No\t:\t<b>30089300316</b></p>\r\n                            <div>Payment Date : <TextField required type='date' name='transactionDate' onChange={handleChange} /></div>\r\n                            <div>Transaction ID : <TextField required type='number' name='transactionId' onChange={handleChange} /></div>\r\n                            <Fab size='medium' disabled={loading} style={{ margin: '20px 0' }} color=\"primary\" variant='extended' type='submit' >\r\n                                {loading ? <><p>Processing</p><CircularProgress /> </> : 'submit'}</Fab>\r\n                        </div>\r\n                    </form>\r\n                </Grid>\r\n            </Paper>\r\n        </Grid>\r\n    </div>);\r\n}\r\n","import React from \"react\";\r\nimport Particles from \"react-particles-js\";\r\nimport { Component } from \"react\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport data from '../component/particlesjs-config-snow.json'\r\nconst style = theme=>({\r\n  bg:{\r\n  height: '100%',\r\n    width: '100%',\r\n    // backgroundColor: '#900',\r\n    backgroundColor: theme.palette.background.default,\r\n\r\n    position: 'fixed',\r\n    left: 0,\r\n    top: 0,\r\n    zIndex: '1'}\r\n});\r\n\r\nclass background extends Component {\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <Particles\r\n        className={classes.bg}\r\n        params={data}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(style)(background);\r\n","import React, { useEffect } from 'react';\r\nimport { Card, Grid, CardContent, TextField, Typography, CircularProgress, Fab } from '@material-ui/core';\r\nimport { useState } from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport PropType from 'prop-types'\r\nimport { login } from '../redux/actions/student'\r\nimport { useHistory } from 'react-router-dom';\r\nimport Background from '../component/background';\r\nfunction Login(props) {\r\n    const history = useHistory()\r\n    const [state, setState] = useState({});\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (props.auth) {\r\n            setLoading(false)\r\n            // setLoading(false)\r\n            if (props.auth === true) {\r\n\r\n                history.push('/dashboard')\r\n            } else if (props.auth) {\r\n                // alert(props.auth.message)\r\n                setState({})\r\n                // toast.error(props.auth.message)\r\n                // console.log(props.auth);\r\n            }\r\n        }\r\n    }, [history, props])\r\n\r\n    const handelChange = (e) => {\r\n        setState({ ...state, [e.target.id]: e.target.value })\r\n    }\r\n    const submit = (e) => {\r\n        e.preventDefault()\r\n        // console.log(state);\r\n        props.login(state)\r\n        setLoading(true)\r\n    }\r\n    return (<>\r\n        <Grid container justify='center' alignItems='center' style={{ minHeight: `calc(100vh - 64px)` }}>\r\n            <Background />\r\n            <Card  style={{ zIndex: 2 }}>\r\n                <CardContent style={{ padding: '20px 10%', textAlign: 'center' }}>\r\n                    <form onSubmit={submit} style={{ maxWidth: 300,display:'inline-grid' }}>\r\n                        <TextField label='User ID'\r\n                            id='id'\r\n                            required\r\n                            type='number'\r\n                            value={state.id} \r\n                            onChange={handelChange}\r\n                            fullWidth />\r\n                        <TextField label='Password'\r\n                            value={state.pass}\r\n                            id='pass'\r\n                            type='password'\r\n                            required\r\n                            onChange={handelChange}\r\n                            fullWidth />\r\n                        <Fab disabled={loading} type='submit' variant='extended' color='primary' style={{ margin: '20px 0' }}>\r\n                        {loading ? <><p>Processing</p><CircularProgress /> </> : 'Login'}\r\n                            </Fab>\r\n                    <Typography variant='caption' color='error'>\r\n                    use your registered <strong>mobile number (xxxxxxxxxx)</strong> &amp; <strong>Date of Birth (YYYY-MM-DD)</strong> <br />\r\n                          as the <strong>User Id &amp; Password</strong><br/>\r\n                    E.g., if your dob is 09 August 2020 then your password is \r\n2020-08-09\r\nwith hyphen.\r\n                          </Typography>\r\n                    </form>\r\n                </CardContent> \r\n            </Card>\r\n        </Grid>\r\n    </>\r\n    );\r\n}\r\nLogin.prototype = {\r\n    auth: PropType.object.isRequired,\r\n    login: PropType.func.isRequired\r\n}\r\nconst mapToProp = {\r\n    login\r\n}\r\nconst mapToState = (state) => ({\r\n    auth: state.admin.login\r\n})\r\nexport default connect(mapToState, mapToProp)(Login); \r\n","import React from 'react'\r\nimport {Grid, makeStyles} from '@material-ui/core'\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nconst styles=makeStyles(theme=>({\r\nroot:{\r\n    height:'calc(100vh - 64px)',\r\n    background:theme.palette.background.default\r\n}\r\n}))\r\n\r\nconst Loading = () => {\r\n    const sty=styles()\r\n     return (\r\n        <Grid className={sty.root} container justify='center' alignItems='center' > <CircularProgress /></Grid>\r\n    )\r\n}\r\nexport default Loading","import React from 'react';\r\nimport Typing from 'react-typing-animation';\r\nimport { Grid, Typography, Paper } from '@material-ui/core';\r\n\r\nexport default function Error() {\r\n    return (<Paper elevation={0}>\r\n        <Grid style={{ minHeight: 'calc(100vh - 64px)',flexDirection:'column' }} container justify='center' alignItems='center' >\r\n            <Typography variant='h1'>\r\n                <Typing startDelay={12} speed={60}>\r\n                    Error 404 !\r\n                 </Typing>\r\n            </Typography>\r\n            <Typography variant='subtitle1' color=\"textSecondary\">\r\n                <Typing startDelay={2000} speed={100} loop>\r\n                    Page not Found...\r\n              <Typing.Backspace count={18} />\r\n              </Typing>\r\n            </Typography>\r\n        </Grid>\r\n        </Paper>\r\n    )\r\n}","import React, { useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch, Redirect, } from 'react-router-dom'\n\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport Form from './form/Form'\n// import Form2 from './form/Form4'\nimport Agreement from './agrement'\nimport Dashboard from './complete'\nimport AppBar from './app bar/AppBar'\nimport DD from './upload'\nimport Pay from './pay'\nimport Login from './auth/login'\nimport Loading from './component/loading'\n\nimport Error from './component/Error'\n\nimport { connect } from 'react-redux';\nimport { checkUser, logout } from './redux/actions/student'\nimport PropType from 'prop-types'\nimport { Typography, Link, Divider, Tooltip, ThemeProvider, createMuiTheme, useMediaQuery, Grid } from '@material-ui/core';\n\nfunction App(props) {\n  const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n\n  useEffect(() => {\n    props.checkUser() \n  }, [])\n\n  const out = () => { \n    props.logout();\n  } \n  const theme = React.useMemo(\n    () =>\n      createMuiTheme({\n        palette: {\n          type: prefersDarkMode ? 'dark' : 'light',\n        },\n      }),\n    [prefersDarkMode],\n  );\n  return (\n    <>\n     <ThemeProvider theme={theme}>\n      <Router>\n        <AppBar auth={props.auth} out={out} />\n        <Switch>\n          {/* <Route exact path='/' component={Form2}/> */}\n          <Route exact path='/' component={Agreement} />\n          <Route exact path='/login' render={() => (props.auth === null ? <Loading /> : props.auth === false ? <Login /> : <Redirect to='/dashboard' />)} />\n          <Route exact path='/form' render={() => (props.auth === null ? <Loading /> : <Form auth={props.auth} />)} />\n          <Route exact path='/upload' render={() => (props.auth === null ? <Loading /> : props.auth === true ? <DD id={props.user ? props.user.applicantId : ''} /> : <Redirect to='/login' />)} />\n          <Route exact path='/pay' render={() => (props.auth === null ? <Loading /> : props.auth === true ? <Pay id={props.user ? props.user.applicantId : ''} /> : <Redirect to='/login' />)} />\n\n          {/* <Route exact path='/dashboard' component={Menu}/> */}\n          <Route exact path=\"/dashboard\" render={() => (props.auth === null ? <Loading /> : props.auth === true ? <Dashboard id={props.user ? props.user.applicantId : ''} /> : <Redirect to='/login' />)} />\n          <Route component={Error}/>\n        </Switch>\n      </Router>\n\n      <ToastContainer />\n      <Grid style={{\n        position: \"fixed\", width:'100%',\n        background:'#00000038',\n        zIndex:999999,\n        bottom: 0,\n        left: 2\n      }}>\n        <Divider />\n        <Typography variant=\"body2\" color=\"textSecondary\" style={{\n          fontSize: 'small',\n          fontFamily: 'monospace'\n        }}>\n          {'  Made with 😊 by '}\n  <Tooltip arrow title=\"Hello, I'm Dipanjan Panja from 2017-21,CSE Batch 😊\">\n          <Link color='textPrimary' href=\"https://facebook.com/dipanjanpanja6\">\n            Dipanjan Panja\n  </Link></Tooltip>{' & '}\n  <Tooltip arrow title=\"Greetings from Aditya!\">\n  <Link color='textPrimary' href=\"https://github.com/Adityashaw\">\n            Aditya Shaw. \n\n  </Link></Tooltip>\n          {' © '}\n          {new Date().getFullYear()}{' '}\n          <Link color='textPrimary' href=\"https://gcect.ac.in\">\n            GCECT.\n\n  </Link> \n        </Typography>\n      </Grid>\n</ThemeProvider>\n    </>\n\n  );\n}\n\nApp.prototype = {\n  auth: PropType.bool.isRequired,\n  user: PropType.string.isRequired,\n  checkUser: PropType.func.isRequired,\n  logout: PropType.func.isRequired,\n}\nconst mapToProp = {\n  logout, checkUser\n}\nconst mapToState = (state) => ({\n  auth: state.admin.auth,\n  user: state.admin.user,\n})\nexport default connect(mapToState, mapToProp)(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {LOGIN,  AUTH,USER,} from '../type'\r\n\r\nconst initialState = {\r\n    login: {}, \r\n     auth:null, \r\n    user:'',\r\n\r\n\r\n}\r\n\r\nexport default function (state = initialState, actions) {\r\n    switch (actions.type) {\r\n\r\n      \r\n        case USER:\r\n            return {\r\n                ...state,\r\n                user: actions.payload\r\n            }\r\n        case AUTH:\r\n            return {\r\n                ...state,\r\n                auth: actions.payload\r\n            }\r\n      \r\n        case LOGIN:\r\n            return {\r\n                ...state,\r\n                login: actions.payload\r\n            }\r\n       \r\n\r\n\r\n        default:\r\n            return state\r\n\r\n    }\r\n}","import { createStore, combineReducers, applyMiddleware,  } from 'redux';\r\n\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk'\r\nimport admin from './reduser/admin'\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst reducers = combineReducers({\r\n    admin:admin\r\n})\r\n\r\nconst store = createStore(reducers, initialState, composeWithDevTools(applyMiddleware(...middleware)));\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './redux/store'\n\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n  ,\n  document.getElementById('root')\n);\n\nserviceWorker.register(); \n"],"sourceRoot":""}